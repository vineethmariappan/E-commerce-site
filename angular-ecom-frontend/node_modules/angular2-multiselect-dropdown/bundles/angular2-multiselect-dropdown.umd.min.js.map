{"version":3,"sources":["ng://angular2-multiselect-dropdown/lib/multiselect.model.ts","ng://angular2-multiselect-dropdown/lib/clickOutside.ts","ng://angular2-multiselect-dropdown/lib/multiselect.service.ts","ng://angular2-multiselect-dropdown/lib/list-filter.ts","ng://angular2-multiselect-dropdown/lib/menu-item.ts","ng://angular2-multiselect-dropdown/lib/virtual-scroll.ts","ng://angular2-multiselect-dropdown/lib/multiselect.component.ts"],"names":["MyException","status","body","this","ClickOutsideDirective","_elementRef","clickOutside","EventEmitter","prototype","onClick","event","targetElement","nativeElement","contains","emit","Directive","args","selector","ElementRef","Output","HostListener","type","ScrollDirective","scroll","styleDirective","el","ngOnInit","style","top","styleVal","ngOnChanges","Input","setPosition","height","bottom","parseInt","DataService","filteredData","subject","Subject","setData","data","next","getData","asObservable","getFilteredData","length","Injectable","ListFilterPipe","ds","filteredList","transform","items","filter","searchBy","_this","item","applyFilter","found","grpTitle","t","toString","toLowerCase","indexOf","prop","Pipe","name","pure","Item","Component","template","ContentChild","TemplateRef","static","Badge","Search","TemplateRenderer","viewContainer","view","createEmbeddedView","$implicit","ngOnDestroy","destroy","ViewContainerRef","CIcon","encapsulation","ViewEncapsulation","None","VirtualScrollComponent","element","renderer","zone","window","_enableUnequalChildrenSizes","useMarginInsteadOfTranslate","_bufferAmount","scrollAnimationTime","resizeBypassRefreshTheshold","_checkResizeInterval","_items","compareItems","item1","item2","update","vsUpdate","change","vsChange","start","vsStart","end","vsEnd","calculatedScrollbarWidth","calculatedScrollbarHeight","padding","previousViewPort","cachedPageSize","previousScrollNumberElements","horizontal","scrollThrottlingTime","resetWrapGroupDimensions","Object","defineProperty","pageInfo","startIndex","endIndex","value","minMeasuredChildWidth","undefined","minMeasuredChildHeight","Math","max","enableUnequalChildrenSizes","_scrollThrottlingTime","_this_1","refresh_throttled","throttleTrailing","refresh_internal","addScrollEventHandlers","_horizontal","updateDirection","revertParentOverscroll","scrollElement","getScrollElement","oldParentScrollOverflow","y","x","_parentScroll","removeScrollEventHandlers","changes","indexLengthChanged","cachedItemsLength","firstRun","previousValue","ngDoCheck","refresh","scrollInto","alignToBeginning","additionalOffset","animationMilliseconds","animationCompletedCallback","index","scrollToIndex","maxRetries","retryIfNeeded","dimensions","calculateDimensions","desiredStartIndex","min","itemCount","scrollToIndex_internal","offset","getElementsOffset","calculatePadding","wrapGroupsPerPage","_childScrollDim","setProperty","_scrollType","checkScrollElementResized","sizeChanged","boundingRect","getBoundingClientRect","previousScrollBoundingRect","widthChange","abs","width","heightChange","_invisiblePaddingProperty","_offsetType","_pageOffsetType","_marginDir","_translateDir","func","wait","timeout","_arguments","arguments","apply","setTimeout","itemsArrayModified","refreshCompletedCallback","maxRunTimes","runOutsideAngular","requestAnimationFrame","viewport","calculateViewport","startChanged","endChanged","scrollLengthChanged","scrollLength","paddingChanged","setStyle","invisiblePaddingElementRef","contentElementRef","run","viewPortItems","startIndexWithBuffer","endIndexWithBuffer","slice","parentScroll","Window","document","scrollingElement","documentElement","disposeScrollHandler","listen","disposeResizeHandler","checkScrollElementResizedTimer","setInterval","clearInterval","containerElementRef","elementClientRect","scrollClientRect","left","countItemsPerWrapGroup","propertyName","children","childrenLength","firstOffset","result","getScrollPosition","windowScrollValue","oldWrapGroupDimensions","wrapGroupDimensions","maxChildSizePerWrapGroup","numberOfKnownWrapGroupChildSizes","sumOfKnownWrapGroupChildWidths","sumOfKnownWrapGroupChildHeights","itemsPerWrapGroup","wrapGroupIndex","oldWrapGroupDimension","itemsChanged","arrayStartIndex","i","childWidth","childHeight","offsetHeight","clientHeight","offsetWidth","clientWidth","defaultChildWidth","defaultChildHeight","viewWidth","scrollbarWidth","viewHeight","scrollbarHeight","content","scrollOffset","ceil","maxWidthForWrapGroup","maxHeightForWrapGroup","sumOfVisibleMaxWidths","sumOfVisibleMaxHeights","clientRect","oldValue","maxVisibleWidthForWrapGroup","scrollOffsetToRemove","maxVisibleHeightForWrapGroup","averageChildWidth","averageChildHeight","itemsPerRow","itemsPerCol","itemsPerPage","pageCount_fractional","numberOfWrapGroups","defaultScrollLengthPerWrapGroup","numUnknownChildSizes","childSize","round","arrayStartIndexWithBuffer","allowUnequalChildrenSizes_Experimental","startingWrapGroupIndex","calculatePageInfo","scrollPosition","scrollPercentage","totalScrolledLength","startingArrayIndex_fractional","maxStart","floor","arrayEndIndex","isNaN","bufferSize","bufferAmount","newPadding","newScrollLength","exportAs","host","[class.horizontal]","[class.vertical]","[class.selfScroll]","Renderer2","NgZone","ViewChild","read","DROPDOWN_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","AngularMultiSelect","multi","DROPDOWN_CONTROL_VALIDATION","NG_VALIDATORS","noop","cdr","onSelect","onDeSelect","onSelectAll","onDeSelectAll","onOpen","onClose","onScrollToEnd","onFilterSelectAll","onFilterDeSelectAll","onAddFilterNewItem","onGroupSelect","onGroupDeSelect","isActive","isSelectAll","isFilterSelectAll","isInfiniteFilterSelectAll","chunkIndex","cachedItems","groupCachedItems","itemHeight","filterLength","infiniteFilterLength","dropdownListYOffset","defaultSettings","singleSelection","text","enableCheckAll","selectAllText","unSelectAllText","filterSelectAllText","filterUnSelectAllText","enableSearchFilter","maxHeight","badgeShowLimit","classes","disabled","searchPlaceholderText","showCheckbox","noDataLabel","searchAutofocus","lazyLoading","labelKey","primaryKey","position","autoPosition","enableFilterSelectAll","selectGroup","addNewItemOnFilter","addNewButtonText","escapeToClose","onTouchedCallback","onChangeCallback","onEscapeDown","settings","closeDropdown","assign","cloneArray","selectedListHeight","val","selectedListElem","subscription","subscribe","len","forEach","obj","hasOwnProperty","onFilterChange","calculateDropdownDirection","firstChange","groupBy","groupedData","transformData","selectedItems","loading","console","log","ngAfterViewInit","ngAfterViewChecked","detectChanges","onItemClick","evt","isSelected","limit","limitSelection","removeSelected","addSelected","updateGroupInfo","validate","c","writeValue","msg","e","error","registerOnChange","fn","registerOnTouched","trackByFn","clickedItem","push","splice","toggleDropdown","searchInput","searchTempl","focus","preventDefault","openDropdown","closeDropdownOnClickOut","toggleSelectAll","selected","filterGroupedList","arr","list","itemName","some","cat","clearSearch","toggleFilterSelectAll","removed_1","added_1","toggleInfiniteFilterSelectAll","cnt","Array","isArray","JSON","parse","stringify","key","field","groupedObj","reduce","prev","cur","tempArr","keys","map","filterInfiniteList","filteredElems","target","resetInfiniteSearch","onScrollEnd","unsubscribe","addFilterNewItem","filterPipe","dropdownHeight","dropdownListElem","viewportHeight","selectedListBounds","spaceOnTop","openTowardsTop","[class]","providers","ChangeDetectorRef","AngularMultiSelectModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["export class MyException {\n\tstatus : number;\n\tbody : any;\n\tconstructor(status : number, body : any) {\n\t\tthis.status = status;\n\t\tthis.body = body;\n\t}\n\t\n}","import { Directive, ElementRef, Output, EventEmitter, HostListener, Input, OnInit, OnChanges } from '@angular/core';\n\n@Directive({\n    selector: '[clickOutside]'\n})\nexport class ClickOutsideDirective {\n    constructor(private _elementRef: ElementRef) {\n    }\n\n    @Output()\n    public clickOutside = new EventEmitter<MouseEvent>();\n\n    @HostListener('document:click', ['$event', '$event.target'])\n    @HostListener('document:touchstart', ['$event', '$event.target'])\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n        if (!targetElement) {\n            return;\n        }\n\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.clickOutside.emit(event);\n        }\n    }\n}\n\n@Directive({\n    selector: '[scroll]'\n})\nexport class ScrollDirective {\n    constructor(private _elementRef: ElementRef) {\n    }\n\n    @Output()\n    public scroll = new EventEmitter<MouseEvent>();\n\n    @HostListener('scroll', ['$event'])\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n        this.scroll.emit(event);\n    }\n}\n@Directive({\n    selector: '[styleProp]'\n})\nexport class styleDirective {\n\n    constructor(private el: ElementRef) {\n\n    }\n\n    @Input('styleProp') styleVal: number;\n\n    ngOnInit() {\n\n        this.el.nativeElement.style.top = this.styleVal;\n    }\n    ngOnChanges(): void {\n        this.el.nativeElement.style.top = this.styleVal;\n    }\n}\n\n\n@Directive({\n    selector: '[setPosition]'\n})\nexport class setPosition implements OnInit, OnChanges {\n\n    @Input('setPosition') height: number;\n\n    constructor(public el: ElementRef) {\n\n    }\n    ngOnInit() {\n        if (this.height) {\n            this.el.nativeElement.style.bottom = parseInt(this.height + 15 + \"\") + 'px';\n        }\n    }\n    ngOnChanges(): void {\n        if (this.height) {\n            this.el.nativeElement.style.bottom = parseInt(this.height + 15 + \"\") + 'px';\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n\n@Injectable()\nexport class DataService {\n\n  filteredData: any = [];\n  private subject = new Subject<any>();\n\n  setData(data: any) {\n\n    this.filteredData = data;\n    this.subject.next(data);\n  }\n  getData(): Observable<any> {\n    return this.subject.asObservable();\n  }\n  getFilteredData() {\n    if (this.filteredData && this.filteredData.length > 0) {\n      return this.filteredData;\n    }\n    else {\n      return [];\n    }\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { DataService } from './multiselect.service';\n\n\n@Pipe({\n    name: 'listFilter',\n    pure: true\n})\nexport class ListFilterPipe implements PipeTransform {\n\n    public filteredList: any = [];\n    constructor(private ds: DataService) {\n\n    }\n\n    transform(items: any[], filter: any, searchBy: any): any[] {\n        if (!items || !filter) {\n            this.ds.setData(items);\n            return items;\n        }\n        this.filteredList = items.filter((item: any) => this.applyFilter(item, filter, searchBy));\n        this.ds.setData(this.filteredList);\n        return this.filteredList;\n    }\n    applyFilter(item: any, filter: any, searchBy: any): boolean {\n        let found = false;\n        if (searchBy.length > 0) {\n            if (item.grpTitle) {\n                found = true;\n            }\n            else {\n                for (var t = 0; t < searchBy.length; t++) {\n                    if (filter && item[searchBy[t]] && item[searchBy[t]] != \"\") {\n                        if (item[searchBy[t]].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n                            found = true;\n                        }\n                    }\n                }\n            }\n\n        } else {\n            if (item.grpTitle) {\n                found = true;\n            }\n            else {\n                for (var prop in item) {\n                    if (filter && item[prop]) {\n                        if (item[prop].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n                            found = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return found;\n    }\n}","import { Component, OnInit, OnDestroy, NgModule, TemplateRef, AfterContentInit, ContentChild, EmbeddedViewRef, OnChanges, ViewContainerRef, ViewEncapsulation, Input, Output, EventEmitter, ElementRef, AfterViewInit, Pipe, PipeTransform, Directive } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer } from '@angular/platform-browser';\nimport { CommonModule }       from '@angular/common';\n\n@Component({\n  selector: 'c-item',\n  template: ``\n})\n\nexport class Item { \n\n    @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>\n    constructor() {   \n    }\n\n}\n\n@Component({\n  selector: 'c-badge',\n  template: ``\n})\n\nexport class Badge { \n\n    @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>\n    constructor() {   \n    }\n\n}\n\n@Component({\n  selector: 'c-search',\n  template: ``\n})\n\nexport class Search { \n\n    @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>\n    constructor() {   \n    }\n\n}\n@Component({\n  selector: 'c-templateRenderer',\n  template: ``\n})\n\nexport class TemplateRenderer implements OnInit, OnDestroy { \n\n    @Input() data: any\n    @Input() item: any\n    view: EmbeddedViewRef<any>;\n\n    constructor(public viewContainer: ViewContainerRef) {   \n    }\n    ngOnInit() {\n        this.view = this.viewContainer.createEmbeddedView(this.data.template, {\n            '\\$implicit': this.data,\n            'item':this.item\n        });\n    }\n\t\n    ngOnDestroy() {\n\t\tthis.view.destroy();\n\t}\n\n}\n\n@Component({\n  selector: 'c-icon',\n  template: `<svg *ngIf=\"name == 'remove'\" width=\"100%\" height=\"100%\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n                        viewBox=\"0 0 47.971 47.971\" style=\"enable-background:new 0 0 47.971 47.971;\" xml:space=\"preserve\">\n                        <g>\n                            <path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88\n                                c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242\n                                C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879\n                                s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\"/>\n                        </g>\n                    </svg>\n            <svg *ngIf=\"name == 'angle-down'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 612 612\" style=\"enable-background:new 0 0 612 612;\" xml:space=\"preserve\">\n<g>\n\t<g id=\"_x31_0_34_\">\n\t\t<g>\n\t\t\t<path d=\"M604.501,134.782c-9.999-10.05-26.222-10.05-36.221,0L306.014,422.558L43.721,134.782\n\t\t\t\tc-9.999-10.05-26.223-10.05-36.222,0s-9.999,26.35,0,36.399l279.103,306.241c5.331,5.357,12.422,7.652,19.386,7.296\n\t\t\t\tc6.988,0.356,14.055-1.939,19.386-7.296l279.128-306.268C614.5,161.106,614.5,144.832,604.501,134.782z\"/>\n\t\t</g>\n\t</g>\n</g>\n</svg>\n<svg *ngIf=\"name == 'angle-up'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 612 612\" style=\"enable-background:new 0 0 612 612;\" xml:space=\"preserve\">\n<g>\n\t<g id=\"_x39__30_\">\n\t\t<g>\n\t\t\t<path d=\"M604.501,440.509L325.398,134.956c-5.331-5.357-12.423-7.627-19.386-7.27c-6.989-0.357-14.056,1.913-19.387,7.27\n\t\t\t\tL7.499,440.509c-9.999,10.024-9.999,26.298,0,36.323s26.223,10.024,36.222,0l262.293-287.164L568.28,476.832\n\t\t\t\tc9.999,10.024,26.222,10.024,36.221,0C614.5,466.809,614.5,450.534,604.501,440.509z\"/>\n\t\t</g>\n\t</g>\n</g>\n\n</svg>\n<svg *ngIf=\"name == 'search'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 615.52 615.52\" style=\"enable-background:new 0 0 615.52 615.52;\"\n\t xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<g id=\"Search__x28_and_thou_shall_find_x29_\">\n\t\t\t<g>\n\t\t\t\t<path d=\"M602.531,549.736l-184.31-185.368c26.679-37.72,42.528-83.729,42.528-133.548C460.75,103.35,357.997,0,231.258,0\n\t\t\t\t\tC104.518,0,1.765,103.35,1.765,230.82c0,127.47,102.753,230.82,229.493,230.82c49.53,0,95.271-15.944,132.78-42.777\n\t\t\t\t\tl184.31,185.366c7.482,7.521,17.292,11.291,27.102,11.291c9.812,0,19.62-3.77,27.083-11.291\n\t\t\t\t\tC617.496,589.188,617.496,564.777,602.531,549.736z M355.9,319.763l-15.042,21.273L319.7,356.174\n\t\t\t\t\tc-26.083,18.658-56.667,28.526-88.442,28.526c-84.365,0-152.995-69.035-152.995-153.88c0-84.846,68.63-153.88,152.995-153.88\n\t\t\t\t\ts152.996,69.034,152.996,153.88C384.271,262.769,374.462,293.526,355.9,319.763z\"/>\n\t\t\t</g>\n\t\t</g>\n\t</g>\n</g>\n\n</svg>\n<svg *ngIf=\"name == 'clear'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 51.976 51.976\" style=\"enable-background:new 0 0 51.976 51.976;\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M44.373,7.603c-10.137-10.137-26.632-10.138-36.77,0c-10.138,10.138-10.137,26.632,0,36.77s26.632,10.138,36.77,0\n\t\tC54.51,34.235,54.51,17.74,44.373,7.603z M36.241,36.241c-0.781,0.781-2.047,0.781-2.828,0l-7.425-7.425l-7.778,7.778\n\t\tc-0.781,0.781-2.047,0.781-2.828,0c-0.781-0.781-0.781-2.047,0-2.828l7.778-7.778l-7.425-7.425c-0.781-0.781-0.781-2.048,0-2.828\n\t\tc0.781-0.781,2.047-0.781,2.828,0l7.425,7.425l7.071-7.071c0.781-0.781,2.047-0.781,2.828,0c0.781,0.781,0.781,2.047,0,2.828\n\t\tl-7.071,7.071l7.425,7.425C37.022,34.194,37.022,35.46,36.241,36.241z\"/>\n</g>\n</svg>`,\n  encapsulation: ViewEncapsulation.None,\n\n})\n\nexport class CIcon { \n\n    @Input() name:any;\n\n}","import {\n\tComponent,\n\tContentChild,\n\tElementRef,\n\tEventEmitter,\n\tInput,\n\tNgModule,\n\tNgZone,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tOutput,\n\tRenderer2,\n\tViewChild,\n} from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\n\nexport interface ChangeEvent {\n\tstart?: number;\n\tend?: number;\n}\n\nexport interface WrapGroupDimensions {\n\tnumberOfKnownWrapGroupChildSizes: number;\n\tsumOfKnownWrapGroupChildWidths: number;\n\tsumOfKnownWrapGroupChildHeights: number;\n\tmaxChildSizePerWrapGroup: WrapGroupDimension[];\n}\n\nexport interface WrapGroupDimension {\n\tchildWidth: number;\n\tchildHeight: number;\n\titems: any[];\n}\n\nexport interface IDimensions {\n\titemCount: number;\n\titemsPerWrapGroup: number;\n\twrapGroupsPerPage: number;\n\titemsPerPage: number;\n\tpageCount_fractional: number;\n\tchildWidth: number;\n\tchildHeight: number;\n\tscrollLength: number;\n}\n\nexport interface IPageInfo {\n\tstartIndex: number;\n\tendIndex: number;\n}\n\nexport interface IPageInfoWithBuffer extends IPageInfo {\n\tstartIndexWithBuffer: number;\n\tendIndexWithBuffer: number;\n}\n\nexport interface IViewport extends IPageInfoWithBuffer {\n\tpadding: number;\n\tscrollLength: number;\n}\n\n@Component({\n\tselector: 'virtual-scroll,[virtualScroll]',\n\texportAs: 'virtualScroll',\n\ttemplate: `\n    <div class=\"total-padding\" #invisiblePadding></div>\n    <div class=\"scrollable-content\" #content>\n      <ng-content></ng-content>\n    </div>\n  `,\n\thost: {\n\t\t'[class.horizontal]': \"horizontal\",\n\t\t'[class.vertical]': \"!horizontal\",\n\t\t'[class.selfScroll]': \"!parentScroll\"\n\t},\n\tstyles: [`\n    :host {\n      position: relative;\n\t  display: block;\n      -webkit-overflow-scrolling: touch;\n    }\n\t\n\t:host.horizontal.selfScroll {\n      overflow-y: visible;\n      overflow-x: auto;\n\t}\n\t:host.vertical.selfScroll {\n      overflow-y: auto;\n      overflow-x: visible;\n\t}\n\t\n    .scrollable-content {\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      max-width: 100vw;\n      max-height: 100vh;\n      position: absolute;\n    }\n\n\t.scrollable-content ::ng-deep > * {\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t:host.horizontal {\n\t\twhite-space: nowrap;\n\t}\n\t\n\t:host.horizontal .scrollable-content {\n\t\tdisplay: flex;\n\t}\n\t\n\t:host.horizontal .scrollable-content ::ng-deep > * {\n\t\tflex-shrink: 0;\n\t\tflex-grow: 0;\n\t\twhite-space: initial;\n\t}\n\t\n    .total-padding {\n      width: 1px;\n      opacity: 0;\n    }\n    \n    :host.horizontal .total-padding {\n      height: 100%;\n    }\n  `]\n})\nexport class VirtualScrollComponent implements OnInit, OnChanges, OnDestroy {\n\tpublic viewPortItems: any[];\n\tpublic window = window;\n\n\tpublic get viewPortIndices(): IPageInfo {\n\t\tlet pageInfo: IPageInfo = this.previousViewPort || <any>{};\n\t\treturn {\n\t\t\tstartIndex: pageInfo.startIndex || 0,\n\t\t\tendIndex: pageInfo.endIndex || 0\n\t\t};\n\t}\n\n\tprotected _enableUnequalChildrenSizes: boolean = false;\n\t@Input()\n\tpublic get enableUnequalChildrenSizes(): boolean {\n\t\treturn this._enableUnequalChildrenSizes;\n\t}\n\tpublic set enableUnequalChildrenSizes(value: boolean) {\n\t\tif (this._enableUnequalChildrenSizes === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enableUnequalChildrenSizes = value;\n\t\tthis.minMeasuredChildWidth = undefined;\n\t\tthis.minMeasuredChildHeight = undefined;\n\t}\n\n\t@Input()\n\tpublic useMarginInsteadOfTranslate: boolean = false;\n\n\t@Input()\n\tpublic scrollbarWidth: number;\n\n\t@Input()\n\tpublic scrollbarHeight: number;\n\n\t@Input()\n\tpublic childWidth: number;\n\n\t@Input()\n\tpublic childHeight: number;\n\n\tprotected _bufferAmount: number = 0;\n\t@Input()\n\tpublic get bufferAmount(): number {\n\t\treturn Math.max(this._bufferAmount, this.enableUnequalChildrenSizes ? 5 : 0);\n\t}\n\tpublic set bufferAmount(value: number) {\n\t\tthis._bufferAmount = value;\n\t}\n\n\t@Input()\n\tpublic scrollAnimationTime: number = 750;\n\n\t@Input()\n\tpublic resizeBypassRefreshTheshold: number = 5;\n\n\tprotected _scrollThrottlingTime: number;\n\t@Input()\n\tpublic get scrollThrottlingTime(): number {\n\t\treturn this._scrollThrottlingTime;\n\t}\n\tpublic set scrollThrottlingTime(value: number) {\n\t\tthis._scrollThrottlingTime = value;\n\t\tthis.refresh_throttled = <any>this.throttleTrailing(() => {\n\t\t\tthis.refresh_internal(false);\n\t\t}, this._scrollThrottlingTime);\n\t}\n\n\tprotected checkScrollElementResizedTimer: number;\n\tprotected _checkResizeInterval: number = 1000;\n\t@Input()\n\tpublic get checkResizeInterval(): number {\n\t\treturn this._checkResizeInterval;\n\t}\n\tpublic set checkResizeInterval(value: number) {\n\t\tif (this._checkResizeInterval === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._checkResizeInterval = value;\n\t\tthis.addScrollEventHandlers();\n\t}\n\n\tprotected _items: any[] = [];\n\t@Input()\n\tpublic get items(): any[] {\n\t\treturn this._items;\n\t}\n\tpublic set items(value: any[]) {\n\t\tif (value === this._items) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._items = value || [];\n\t\tthis.refresh_internal(true);\n\t}\n\n\t@Input()\n\tpublic compareItems: (item1: any, item2: any) => boolean = (item1: any, item2: any) => item1 === item2;\n\n\tprotected _horizontal: boolean;\n\t@Input()\n\tpublic get horizontal(): boolean {\n\t\treturn this._horizontal;\n\t}\n\tpublic set horizontal(value: boolean) {\n\t\tthis._horizontal = value;\n\t\tthis.updateDirection();\n\t}\n\n\tprotected revertParentOverscroll(): void {\n\t\tconst scrollElement: any = this.getScrollElement();\n\t\tif (scrollElement && this.oldParentScrollOverflow) {\n\t\t\tscrollElement.style['overflow-y'] = this.oldParentScrollOverflow.y;\n\t\t\tscrollElement.style['overflow-x'] = this.oldParentScrollOverflow.x;\n\t\t}\n\n\t\tthis.oldParentScrollOverflow = undefined;\n\t}\n\n\tprotected oldParentScrollOverflow: { x: string, y: string };\n\tprotected _parentScroll: Element | Window;\n\t@Input()\n\tpublic get parentScroll(): Element | Window {\n\t\treturn this._parentScroll;\n\t}\n\tpublic set parentScroll(value: Element | Window) {\n\t\tif (this._parentScroll === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.revertParentOverscroll();\n\t\tthis._parentScroll = value;\n\t\tthis.addScrollEventHandlers();\n\n\t\tconst scrollElement:any = this.getScrollElement();\n\t\tif (scrollElement !== this.element.nativeElement) {\n\t\t\tthis.oldParentScrollOverflow = { x: scrollElement.style['overflow-x'], y: scrollElement.style['overflow-y'] };\n\t\t\tscrollElement.style['overflow-y'] = this.horizontal ? 'visible' : 'auto';\n\t\t\tscrollElement.style['overflow-x'] = this.horizontal ? 'auto' : 'visible';\n\t\t}\n\t}\n\n\t@Output()\n\tpublic update: EventEmitter<any[]> = new EventEmitter<any[]>();\n\t@Output()\n\tpublic vsUpdate: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n\t@Output()\n\tpublic change: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\n\t@Output()\n\tpublic vsChange: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\n\n\t@Output()\n\tpublic start: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\n\t@Output()\n\tpublic vsStart: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\n\n\t@Output()\n\tpublic end: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\n\t@Output()\n\tpublic vsEnd: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\n\n\t@ViewChild('content', { read: ElementRef, static: true})\n\tpublic contentElementRef: ElementRef;\n\n\t@ViewChild('invisiblePadding', { read: ElementRef, static: true })\n\tpublic invisiblePaddingElementRef: ElementRef;\n\n\t@ContentChild('container', { read: ElementRef, static: true })\n\tpublic containerElementRef: ElementRef;\n\n\tpublic ngOnInit() {\n\t\tthis.addScrollEventHandlers();\n\t}\n\n\tpublic ngOnDestroy() {\n\t\tthis.removeScrollEventHandlers();\n\t\tthis.revertParentOverscroll();\n\t}\n\n\tpublic ngOnChanges(changes: any) {\n\t\tlet indexLengthChanged: any = this.cachedItemsLength !== this.items.length;\n\t\tthis.cachedItemsLength = this.items.length;\n\n\t\tconst firstRun: boolean = !changes.items || !changes.items.previousValue || changes.items.previousValue.length === 0;\n\t\tthis.refresh_internal(indexLengthChanged || firstRun);\n\t}\n\n\tpublic ngDoCheck() {\n\t\tif (this.cachedItemsLength !== this.items.length) {\n\t\t\tthis.cachedItemsLength = this.items.length;\n\t\t\tthis.refresh_internal(true);\n\t\t}\n\t}\n\n\tpublic refresh() {\n\t\tthis.refresh_internal(true);\n\t}\n\n\tpublic scrollInto(item: any, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined) {\n\t\tlet index: number = this.items.indexOf(item);\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scrollToIndex(index, alignToBeginning, additionalOffset, animationMilliseconds, animationCompletedCallback);\n\t}\n\n\tpublic scrollToIndex(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined) {\n\t\tlet maxRetries: number = 5;\n\n\t\tlet retryIfNeeded = () => {\n\t\t\t--maxRetries;\n\t\t\tif (maxRetries <= 0) {\n\t\t\t\tif (animationCompletedCallback) {\n\t\t\t\t\tanimationCompletedCallback();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet dimensions: any = this.calculateDimensions();\n\t\t\tlet desiredStartIndex: any = Math.min(Math.max(index, 0), dimensions.itemCount - 1);\n\t\t\tif (this.previousViewPort.startIndex === desiredStartIndex) {\n\t\t\t\tif (animationCompletedCallback) {\n\t\t\t\t\tanimationCompletedCallback();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.scrollToIndex_internal(index, alignToBeginning, additionalOffset, 0, retryIfNeeded);\n\t\t};\n\n\t\tthis.scrollToIndex_internal(index, alignToBeginning, additionalOffset, animationMilliseconds, retryIfNeeded);\n\t}\n\n\tprotected scrollToIndex_internal(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined) {\n\t\tanimationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\n\n\t\tlet scrollElement: any = this.getScrollElement();\n\t\tlet offset: any = this.getElementsOffset();\n\n\t\tlet dimensions: any = this.calculateDimensions();\n\t\tlet scroll: any = this.calculatePadding(index, dimensions, false) + offset + additionalOffset;\n\t\tif (!alignToBeginning) {\n\t\t\tscroll -= dimensions.wrapGroupsPerPage * dimensions[this._childScrollDim];\n\t\t}\n\n\t\tlet animationRequest: number;\n\n\n\t\tif (!animationMilliseconds) {\n\t\t\tthis.renderer.setProperty(scrollElement, this._scrollType, scroll);\n\t\t\tthis.refresh_internal(false, animationCompletedCallback);\n\t\t\treturn;\n\t\t}\n\n\t\n\t}\n\n\tconstructor(protected readonly element: ElementRef, protected readonly renderer: Renderer2, protected readonly zone: NgZone) {\n\t\tthis.horizontal = false;\n\t\tthis.scrollThrottlingTime = 0;\n\t\tthis.resetWrapGroupDimensions();\n\t}\n\n\tprotected previousScrollBoundingRect: ClientRect;\n\tprotected checkScrollElementResized(): void {\n\t\tlet boundingRect: any = this.getScrollElement().getBoundingClientRect();\n\n\t\tlet sizeChanged: boolean;\n\t\tif (!this.previousScrollBoundingRect) {\n\t\t\tsizeChanged = true;\n\t\t} else {\n\t\t\tlet widthChange: any = Math.abs(boundingRect.width - this.previousScrollBoundingRect.width);\n\t\t\tlet heightChange: any = Math.abs(boundingRect.height - this.previousScrollBoundingRect.height);\n\t\t\tsizeChanged = widthChange > this.resizeBypassRefreshTheshold || heightChange > this.resizeBypassRefreshTheshold;\n\t\t}\n\n\t\tif (sizeChanged) {\n\t\t\tthis.previousScrollBoundingRect = boundingRect;\n\t\t\tif (boundingRect.width > 0 && boundingRect.height > 0) {\n\t\t\t\tthis.refresh_internal(false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _invisiblePaddingProperty: any;\n\tprotected _offsetType: any;\n\tprotected _scrollType: any;\n\tprotected _pageOffsetType: any;\n\tprotected _childScrollDim: any;\n\tprotected _translateDir: any;\n\tprotected _marginDir: any;\n\tprotected updateDirection(): void {\n\t\tif (this.horizontal) {\n\t\t\tthis._invisiblePaddingProperty = 'width';\n\t\t\tthis._offsetType = 'offsetLeft';\n\t\t\tthis._pageOffsetType = 'pageXOffset';\n\t\t\tthis._childScrollDim = 'childWidth';\n\t\t\tthis._marginDir = 'margin-left';\n\t\t\tthis._translateDir = 'translateX';\n\t\t\tthis._scrollType = 'scrollLeft';\n\t\t}\n\t\telse {\n\t\t\tthis._invisiblePaddingProperty = 'height';\n\t\t\tthis._offsetType = 'offsetTop';\n\t\t\tthis._pageOffsetType = 'pageYOffset';\n\t\t\tthis._childScrollDim = 'childHeight';\n\t\t\tthis._marginDir = 'margin-top';\n\t\t\tthis._translateDir = 'translateY';\n\t\t\tthis._scrollType = 'scrollTop';\n\t\t}\n\t}\n\n\tprotected refresh_throttled: () => void;\n\n\tprotected throttleTrailing(func: Function, wait: number): Function {\n\t\tlet timeout: any = undefined;\n\t\tconst result = function () {\n\t\t\tconst _this = this;\n\t\t\tconst _arguments = arguments;\n\n\t\t\tif (timeout) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (wait <= 0) {\n\t\t\t\tfunc.apply(_this, _arguments);\n\t\t\t} else {\n\t\t\t\ttimeout = setTimeout(function () {\n\t\t\t\t\ttimeout = undefined;\n\t\t\t\t\tfunc.apply(_this, _arguments);\n\t\t\t\t}, wait);\n\t\t\t}\n\t\t};\n\n\t\treturn result;\n\t}\n\n\tprotected calculatedScrollbarWidth: number = 0;\n\tprotected calculatedScrollbarHeight: number = 0;\n\n\tprotected padding: number = 0;\n\tprotected previousViewPort: IViewport = <any>{};\n\tprotected cachedItemsLength: number;\n\n\tprotected disposeScrollHandler: () => void | undefined;\n\tprotected disposeResizeHandler: () => void | undefined;\n\n\tprotected refresh_internal(itemsArrayModified: boolean, refreshCompletedCallback: () => void = undefined, maxRunTimes: number = 2) {\n\t\t//note: maxRunTimes is to force it to keep recalculating if the previous iteration caused a re-render (different sliced items in viewport or scrollPosition changed).\n\t\t//The default of 2x max will probably be accurate enough without causing too large a performance bottleneck\n\t\t//The code would typically quit out on the 2nd iteration anyways. The main time it'd think more than 2 runs would be necessary would be for vastly different sized child items or if this is the 1st time the items array was initialized.\n\t\t//Without maxRunTimes, If the user is actively scrolling this code would become an infinite loop until they stopped scrolling. This would be okay, except each scroll event would start an additional infinte loop. We want to short-circuit it to prevent his.\n\n\t\tthis.zone.runOutsideAngular(() => {\n\t\t\trequestAnimationFrame(() => {\n\n\t\t\t\tif (itemsArrayModified) {\n\t\t\t\t\tthis.resetWrapGroupDimensions();\n\t\t\t\t}\n\t\t\t\tlet viewport: any = this.calculateViewport();\n\n\t\t\t\tlet startChanged: any = itemsArrayModified || viewport.startIndex !== this.previousViewPort.startIndex;\n\t\t\t\tlet endChanged: any = itemsArrayModified || viewport.endIndex !== this.previousViewPort.endIndex;\n\t\t\t\tlet scrollLengthChanged: any = viewport.scrollLength !== this.previousViewPort.scrollLength;\n\t\t\t\tlet paddingChanged: any = viewport.padding !== this.previousViewPort.padding;\n\n\t\t\t\tthis.previousViewPort = viewport;\n\n\t\t\t\tif (scrollLengthChanged) {\n\t\t\t\t\tthis.renderer.setStyle(this.invisiblePaddingElementRef.nativeElement, this._invisiblePaddingProperty, `${viewport.scrollLength}px`);\n\t\t\t\t}\n\n\t\t\t\tif (paddingChanged) {\n\t\t\t\t\tif (this.useMarginInsteadOfTranslate) {\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, this._marginDir, `${viewport.padding}px`);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, 'transform', `${this._translateDir}(${viewport.padding}px)`);\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${viewport.padding}px)`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet emitIndexChangedEvents: any = true; // maxReRunTimes === 1 (would need to still run if didn't update if previous iteration had updated)\n\n\t\t\t\tif (startChanged || endChanged) {\n\t\t\t\t\tthis.zone.run(() => {\n\n\t\t\t\t\t\t// update the scroll list to trigger re-render of components in viewport\n\t\t\t\t\t\tthis.viewPortItems = viewport.startIndexWithBuffer >= 0 && viewport.endIndexWithBuffer >= 0 ? this.items.slice(viewport.startIndexWithBuffer, viewport.endIndexWithBuffer + 1) : [];\n\t\t\t\t\t\tthis.update.emit(this.viewPortItems);\n\t\t\t\t\t\tthis.vsUpdate.emit(this.viewPortItems);\n\n\t\t\t\t\t\tif (emitIndexChangedEvents) {\n\t\t\t\t\t\t\tif (startChanged) {\n\t\t\t\t\t\t\t\tthis.start.emit({ start: viewport.startIndex, end: viewport.endIndex });\n\t\t\t\t\t\t\t\tthis.vsStart.emit({ start: viewport.startIndex, end: viewport.endIndex });\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (endChanged) {\n\t\t\t\t\t\t\t\tthis.end.emit({ start: viewport.startIndex, end: viewport.endIndex });\n\t\t\t\t\t\t\t\tthis.vsEnd.emit({ start: viewport.startIndex, end: viewport.endIndex });\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (startChanged || endChanged) {\n\t\t\t\t\t\t\t\tthis.change.emit({ start: viewport.startIndex, end: viewport.endIndex });\n\t\t\t\t\t\t\t\tthis.vsChange.emit({ start: viewport.startIndex, end: viewport.endIndex });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (maxRunTimes > 0) {\n\t\t\t\t\t\t\tthis.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (refreshCompletedCallback) {\n\t\t\t\t\t\t\trefreshCompletedCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tif (maxRunTimes > 0 && (scrollLengthChanged || paddingChanged)) {\n\t\t\t\t\t\tthis.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (refreshCompletedCallback) {\n\t\t\t\t\t\trefreshCompletedCallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected getScrollElement(): any {\n\t\treturn this.parentScroll instanceof Window ? document.scrollingElement || document.documentElement || document.body : this.parentScroll || this.element.nativeElement;\n\t}\n\n\tprotected addScrollEventHandlers() {\n\t\tlet scrollElement: any = this.getScrollElement();\n\n\t\tthis.removeScrollEventHandlers();\n\n\t\tthis.zone.runOutsideAngular(() => {\n\t\t\tif (this.parentScroll instanceof Window) {\n\t\t\t\tthis.disposeScrollHandler = this.renderer.listen('window', 'scroll', this.refresh_throttled);\n\t\t\t\tthis.disposeResizeHandler = this.renderer.listen('window', 'resize', this.refresh_throttled);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.disposeScrollHandler = this.renderer.listen(scrollElement, 'scroll', this.refresh_throttled);\n\t\t\t\tif (this._checkResizeInterval > 0) {\n\t\t\t\t\tthis.checkScrollElementResizedTimer = <any>setInterval(() => { this.checkScrollElementResized(); }, this._checkResizeInterval);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected removeScrollEventHandlers() {\n\t\tif (this.checkScrollElementResizedTimer) {\n\t\t\tclearInterval(this.checkScrollElementResizedTimer);\n\t\t}\n\n\t\tif (this.disposeScrollHandler) {\n\t\t\tthis.disposeScrollHandler();\n\t\t\tthis.disposeScrollHandler = undefined;\n\t\t}\n\n\t\tif (this.disposeResizeHandler) {\n\t\t\tthis.disposeResizeHandler();\n\t\t\tthis.disposeResizeHandler = undefined;\n\t\t}\n\t}\n\n\tprotected getElementsOffset(): number {\n\t\tlet offset: any = 0;\n\n\t\tif (this.containerElementRef && this.containerElementRef.nativeElement) {\n\t\t\toffset += this.containerElementRef.nativeElement[this._offsetType];\n\t\t}\n\n\t\tif (this.parentScroll) {\n\t\t\tlet scrollElement: any = this.getScrollElement();\n\t\t\tlet elementClientRect: any = this.element.nativeElement.getBoundingClientRect();\n\t\t\tlet scrollClientRect: any = scrollElement.getBoundingClientRect();\n\t\t\tif (this.horizontal) {\n\t\t\t\toffset += elementClientRect.left - scrollClientRect.left;\n\t\t\t}\n\t\t\telse {\n\t\t\t\toffset += elementClientRect.top - scrollClientRect.top;\n\t\t\t}\n\n\t\t\tif (!(this.parentScroll instanceof Window)) {\n\t\t\t\toffset += scrollElement[this._scrollType];\n\t\t\t}\n\t\t}\n\n\t\treturn offset;\n\t}\n\n\tprotected countItemsPerWrapGroup() {\n\t\tlet propertyName: any = this.horizontal ? 'offsetLeft' : 'offsetTop';\n\t\tlet children: any = ((this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement).children;\n\n\t\tlet childrenLength: any = children ? children.length : 0;\n\t\tif (childrenLength === 0) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tlet firstOffset: any = children[0][propertyName];\n\t\tlet result: any = 1;\n\t\twhile (result < childrenLength && firstOffset === children[result][propertyName]) {\n\t\t\t++result;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected getScrollPosition(): number {\n\t\tlet windowScrollValue: number = undefined;\n\t\tif (this.parentScroll instanceof Window) {\n\t\t\tvar window: any;\n\t\t\twindowScrollValue = window[this._pageOffsetType];\n\t\t}\n\n\t\treturn windowScrollValue || this.getScrollElement()[this._scrollType] || 0;\n\t}\n\n\tprotected minMeasuredChildWidth: number;\n\tprotected minMeasuredChildHeight: number;\n\n\tprotected wrapGroupDimensions: any;\n\n\tprotected resetWrapGroupDimensions(): void {\n\t\tconst oldWrapGroupDimensions = this.wrapGroupDimensions;\n\t\tthis.wrapGroupDimensions = {\n\t\t\tmaxChildSizePerWrapGroup: [],\n\t\t\tnumberOfKnownWrapGroupChildSizes: 0,\n\t\t\tsumOfKnownWrapGroupChildWidths: 0,\n\t\t\tsumOfKnownWrapGroupChildHeights: 0\n\t\t};\n\n\t\tif (!this.enableUnequalChildrenSizes || !oldWrapGroupDimensions || oldWrapGroupDimensions.numberOfKnownWrapGroupChildSizes === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsPerWrapGroup: number = this.countItemsPerWrapGroup();\n\t\tfor (let wrapGroupIndex: any = 0; wrapGroupIndex < oldWrapGroupDimensions.maxChildSizePerWrapGroup.length; ++wrapGroupIndex) {\n\t\t\tconst oldWrapGroupDimension: WrapGroupDimension = oldWrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\n\t\t\tif (!oldWrapGroupDimension || !oldWrapGroupDimension.items || !oldWrapGroupDimension.items.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (oldWrapGroupDimension.items.length !== itemsPerWrapGroup) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet itemsChanged: any = false;\n\t\t\tlet arrayStartIndex: any = itemsPerWrapGroup * wrapGroupIndex;\n\t\t\tfor (let i = 0; i < itemsPerWrapGroup; ++i) {\n\t\t\t\tif (!this.compareItems(oldWrapGroupDimension.items[i], this.items[arrayStartIndex + i])) {\n\t\t\t\t\titemsChanged = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!itemsChanged) {\n\t\t\t\t++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += oldWrapGroupDimension.childWidth || 0;\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += oldWrapGroupDimension.childHeight || 0;\n\t\t\t\tthis.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = oldWrapGroupDimension;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected calculateDimensions(): IDimensions {\n\t\tlet scrollElement: any = this.getScrollElement();\n\t\tlet itemCount: any = this.items.length;\n\n\t\tconst maxCalculatedScrollBarSize: number = 25; // Note: Formula to auto-calculate doesn't work for ParentScroll, so we default to this if not set by consuming application\n\t\tthis.calculatedScrollbarHeight = Math.max(Math.min(scrollElement.offsetHeight - scrollElement.clientHeight, maxCalculatedScrollBarSize), this.calculatedScrollbarHeight);\n\t\tthis.calculatedScrollbarWidth = Math.max(Math.min(scrollElement.offsetWidth - scrollElement.clientWidth, maxCalculatedScrollBarSize), this.calculatedScrollbarWidth);\n\n\t\tlet viewWidth: any = scrollElement.offsetWidth - (this.scrollbarWidth || this.calculatedScrollbarWidth || (this.horizontal ? 0 : maxCalculatedScrollBarSize));\n\t\tlet viewHeight: any = scrollElement.offsetHeight - (this.scrollbarHeight || this.calculatedScrollbarHeight || (this.horizontal ? maxCalculatedScrollBarSize : 0));\n\n\t\tlet content: any = (this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement;\n\n\t\tlet itemsPerWrapGroup: any = this.countItemsPerWrapGroup();\n\t\tlet wrapGroupsPerPage: any;\n\n\t\tlet defaultChildWidth: any;\n\t\tlet defaultChildHeight: any;\n\n\t\tif (!this.enableUnequalChildrenSizes) {\n\t\t\tif (content.children.length > 0) {\n\t\t\t\tif (!this.childWidth || !this.childHeight) {\n\t\t\t\t\tif (!this.minMeasuredChildWidth && viewWidth > 0) {\n\t\t\t\t\t\tthis.minMeasuredChildWidth = viewWidth;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.minMeasuredChildHeight && viewHeight > 0) {\n\t\t\t\t\t\tthis.minMeasuredChildHeight = viewHeight;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet child: any = content.children[0];\n\t\t\t\tlet clientRect: any = child.getBoundingClientRect();\n\t\t\t\tthis.minMeasuredChildWidth = Math.min(this.minMeasuredChildWidth, clientRect.width);\n\t\t\t\tthis.minMeasuredChildHeight = Math.min(this.minMeasuredChildHeight, clientRect.height);\n\t\t\t}\n\n\t\t\tdefaultChildWidth = this.childWidth || this.minMeasuredChildWidth || viewWidth;\n\t\t\tdefaultChildHeight = this.childHeight || this.minMeasuredChildHeight || viewHeight;\n\t\t\tlet itemsPerRow: any = Math.max(Math.ceil(viewWidth / defaultChildWidth), 1);\n\t\t\tlet itemsPerCol: any = Math.max(Math.ceil(viewHeight / defaultChildHeight), 1);\n\t\t\twrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\n\t\t} else {\n\t\t\tlet scrollOffset: any = scrollElement[this._scrollType] - (this.previousViewPort ? this.previousViewPort.padding : 0);\n\t\t\t\n\t\t\tlet arrayStartIndex: any = this.previousViewPort.startIndexWithBuffer || 0;\n\t\t\tlet wrapGroupIndex: any = Math.ceil(arrayStartIndex / itemsPerWrapGroup);\n\n\t\t\tlet maxWidthForWrapGroup: any = 0;\n\t\t\tlet maxHeightForWrapGroup: any = 0;\n\t\t\tlet sumOfVisibleMaxWidths: any = 0;\n\t\t\tlet sumOfVisibleMaxHeights: any = 0;\n\t\t\twrapGroupsPerPage = 0;\n\n\t\t\tfor (let i = 0; i < content.children.length; ++i) {\n\t\t\t\t++arrayStartIndex;\n\t\t\t\tlet child: any = content.children[i];\n\t\t\t\tlet clientRect: any = child.getBoundingClientRect();\n\n\t\t\t\tmaxWidthForWrapGroup = Math.max(maxWidthForWrapGroup, clientRect.width);\n\t\t\t\tmaxHeightForWrapGroup = Math.max(maxHeightForWrapGroup, clientRect.height);\n\n\t\t\t\tif (arrayStartIndex % itemsPerWrapGroup === 0) {\n\t\t\t\t\tlet oldValue: any = this.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\n\t\t\t\t\tif (oldValue) {\n\t\t\t\t\t\t--this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= oldValue.childWidth || 0;\n\t\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= oldValue.childHeight || 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\t\t\tconst items = this.items.slice(arrayStartIndex - itemsPerWrapGroup, arrayStartIndex);\n\t\t\t\t\tthis.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = {\n\t\t\t\t\t\tchildWidth: maxWidthForWrapGroup,\n\t\t\t\t\t\tchildHeight: maxHeightForWrapGroup,\n\t\t\t\t\t\titems: items\n\t\t\t\t\t};\n\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += maxWidthForWrapGroup;\n\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += maxHeightForWrapGroup;\n\n\t\t\t\t\tif (this.horizontal) {\n\t\t\t\t\t\tlet maxVisibleWidthForWrapGroup: any = Math.min(maxWidthForWrapGroup, Math.max(viewWidth - sumOfVisibleMaxWidths, 0));\n\t\t\t\t\t\tif (scrollOffset > 0) {\n\t\t\t\t\t\t\tlet scrollOffsetToRemove: any = Math.min(scrollOffset, maxVisibleWidthForWrapGroup);\n\t\t\t\t\t\t\tmaxVisibleWidthForWrapGroup -= scrollOffsetToRemove;\n\t\t\t\t\t\t\tscrollOffset -= scrollOffsetToRemove;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsumOfVisibleMaxWidths += maxVisibleWidthForWrapGroup;\n\t\t\t\t\t\tif (maxVisibleWidthForWrapGroup > 0 && viewWidth >= sumOfVisibleMaxWidths) {\n\t\t\t\t\t\t\t++wrapGroupsPerPage;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet maxVisibleHeightForWrapGroup: any = Math.min(maxHeightForWrapGroup, Math.max(viewHeight - sumOfVisibleMaxHeights, 0));\n\t\t\t\t\t\tif (scrollOffset > 0) {\n\t\t\t\t\t\t\tlet scrollOffsetToRemove: any = Math.min(scrollOffset, maxVisibleHeightForWrapGroup);\n\t\t\t\t\t\t\tmaxVisibleHeightForWrapGroup -= scrollOffsetToRemove;\n\t\t\t\t\t\t\tscrollOffset -= scrollOffsetToRemove;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsumOfVisibleMaxHeights += maxVisibleHeightForWrapGroup;\n\t\t\t\t\t\tif (maxVisibleHeightForWrapGroup > 0 && viewHeight >= sumOfVisibleMaxHeights) {\n\t\t\t\t\t\t\t++wrapGroupsPerPage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t++wrapGroupIndex;\n\n\t\t\t\t\tmaxWidthForWrapGroup = 0;\n\t\t\t\t\tmaxHeightForWrapGroup = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet averageChildWidth: any = this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\tlet averageChildHeight: any = this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\tdefaultChildWidth = this.childWidth || averageChildWidth || viewWidth;\n\t\t\tdefaultChildHeight = this.childHeight || averageChildHeight || viewHeight;\n\n\t\t\tif (this.horizontal) {\n\t\t\t\tif (viewWidth > sumOfVisibleMaxWidths) {\n\t\t\t\t\twrapGroupsPerPage += Math.ceil((viewWidth - sumOfVisibleMaxWidths) / defaultChildWidth);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (viewHeight > sumOfVisibleMaxHeights) {\n\t\t\t\t\twrapGroupsPerPage += Math.ceil((viewHeight - sumOfVisibleMaxHeights) / defaultChildHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet itemsPerPage: any = itemsPerWrapGroup * wrapGroupsPerPage;\n\t\tlet pageCount_fractional: any = itemCount / itemsPerPage;\n\t\tlet numberOfWrapGroups: any = Math.ceil(itemCount / itemsPerWrapGroup);\n\n\t\tlet scrollLength: any = 0;\n\n\t\tlet defaultScrollLengthPerWrapGroup: any = this.horizontal ? defaultChildWidth : defaultChildHeight;\n\t\tif (this.enableUnequalChildrenSizes) {\n\t\t\tlet numUnknownChildSizes:any = 0;\n\t\t\tfor (let i:any = 0; i < numberOfWrapGroups; ++i) {\n\t\t\t\tlet childSize: any = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n\t\t\t\tif (childSize) {\n\t\t\t\t\tscrollLength += childSize;\n\t\t\t\t} else {\n\t\t\t\t\t++numUnknownChildSizes;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tscrollLength += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\n\t\t} else {\n\t\t\tscrollLength = numberOfWrapGroups * defaultScrollLengthPerWrapGroup;\n\t\t}\n\n\t\treturn {\n\t\t\titemCount: itemCount,\n\t\t\titemsPerWrapGroup: itemsPerWrapGroup,\n\t\t\twrapGroupsPerPage: wrapGroupsPerPage,\n\t\t\titemsPerPage: itemsPerPage,\n\t\t\tpageCount_fractional: pageCount_fractional,\n\t\t\tchildWidth: defaultChildWidth,\n\t\t\tchildHeight: defaultChildHeight,\n\t\t\tscrollLength: scrollLength\n\t\t};\n\t}\n\n\tprotected cachedPageSize: number = 0;\n\tprotected previousScrollNumberElements: number = 0;\n\n\tprotected calculatePadding(arrayStartIndexWithBuffer: number, dimensions: any, allowUnequalChildrenSizes_Experimental: boolean): number {\n\t\tif (dimensions.itemCount === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet defaultScrollLengthPerWrapGroup: number = dimensions[this._childScrollDim];\n\t\tlet startingWrapGroupIndex: number = Math.ceil(arrayStartIndexWithBuffer / dimensions.itemsPerWrapGroup) || 0;\n\n\t\tif (!this.enableUnequalChildrenSizes) {\n\t\t\treturn defaultScrollLengthPerWrapGroup * startingWrapGroupIndex;\n\t\t}\n\n\t\tlet numUnknownChildSizes: any = 0;\n\t\tlet result: any = 0;\n\t\tfor (let i = 0; i < startingWrapGroupIndex; ++i) {\n\t\t\tlet childSize: WrapGroupDimension = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n\t\t\tif (childSize) {\n\t\t\t\tresult += childSize;\n\t\t\t} else {\n\t\t\t\t++numUnknownChildSizes;\n\t\t\t}\n\t\t}\n\t\tresult += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\n\n\t\treturn result;\n\t}\n\n\tprotected calculatePageInfo(scrollPosition: number, dimensions: any): IPageInfoWithBuffer {\n\t\tlet scrollPercentage: any = 0;\n\t\tif (this.enableUnequalChildrenSizes) {\n\t\t\tconst numberOfWrapGroups:any = Math.ceil(dimensions.itemCount / dimensions.itemsPerWrapGroup);\n\t\t\tlet totalScrolledLength: any = 0;\n\t\t\tlet defaultScrollLengthPerWrapGroup: any = dimensions[this._childScrollDim];\n\t\t\tfor (let i = 0; i < numberOfWrapGroups; ++i) {\n\t\t\t\tlet childSize: any = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n\t\t\t\tif (childSize) {\n\t\t\t\t\ttotalScrolledLength += childSize;\n\t\t\t\t} else {\n\t\t\t\t\ttotalScrolledLength += defaultScrollLengthPerWrapGroup;\n\t\t\t\t}\n\n\t\t\t\tif (scrollPosition < totalScrolledLength) {\n\t\t\t\t\tscrollPercentage = i / numberOfWrapGroups;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tscrollPercentage = scrollPosition / dimensions.scrollLength;\n\t\t}\n\n\t\tlet startingArrayIndex_fractional: any = Math.min(Math.max(scrollPercentage * dimensions.pageCount_fractional, 0), dimensions.pageCount_fractional) * dimensions.itemsPerPage;\n\n\t\tlet maxStart: any = dimensions.itemCount - dimensions.itemsPerPage - 1;\n\t\tlet arrayStartIndex: any = Math.min(Math.floor(startingArrayIndex_fractional), maxStart);\n\t\tarrayStartIndex -= arrayStartIndex % dimensions.itemsPerWrapGroup; // round down to start of wrapGroup\n\n\t\tlet arrayEndIndex: any = Math.ceil(startingArrayIndex_fractional) + dimensions.itemsPerPage - 1;\n\t\tarrayEndIndex += (dimensions.itemsPerWrapGroup - ((arrayEndIndex + 1) % dimensions.itemsPerWrapGroup)); // round up to end of wrapGroup\n\n\t\tif (isNaN(arrayStartIndex)) {\n\t\t\tarrayStartIndex = 0;\n\t\t}\n\t\tif (isNaN(arrayEndIndex)) {\n\t\t\tarrayEndIndex = 0;\n\t\t}\n\n\t\tarrayStartIndex = Math.min(Math.max(arrayStartIndex, 0), dimensions.itemCount - 1);\n\t\tarrayEndIndex = Math.min(Math.max(arrayEndIndex, 0), dimensions.itemCount - 1);\n\n\t\tlet bufferSize: any = this.bufferAmount * dimensions.itemsPerWrapGroup;\n\t\tlet startIndexWithBuffer: any = Math.min(Math.max(arrayStartIndex - bufferSize, 0), dimensions.itemCount - 1);\n\t\tlet endIndexWithBuffer: any = Math.min(Math.max(arrayEndIndex + bufferSize, 0), dimensions.itemCount - 1);\n\n\t\treturn {\n\t\t\tstartIndex: arrayStartIndex,\n\t\t\tendIndex: arrayEndIndex,\n\t\t\tstartIndexWithBuffer: startIndexWithBuffer,\n\t\t\tendIndexWithBuffer: endIndexWithBuffer\n\t\t};\n\t}\n\n\tprotected calculateViewport(): IViewport {\n\t\tlet dimensions: IDimensions = this.calculateDimensions();\n\t\tlet offset: any = this.getElementsOffset();\n\n\t\tlet scrollPosition: any = this.getScrollPosition();\n\t\tif (scrollPosition > dimensions.scrollLength && !(this.parentScroll instanceof Window)) {\n\t\t\tscrollPosition = dimensions.scrollLength;\n\t\t} else {\n\t\t\tscrollPosition -= offset;\n\t\t}\n\t\tscrollPosition = Math.max(0, scrollPosition);\n\n\t\tlet pageInfo: any = this.calculatePageInfo(scrollPosition, dimensions);\n\t\tlet newPadding: any = this.calculatePadding(pageInfo.startIndexWithBuffer, dimensions, true);\n\t\tlet newScrollLength: any = dimensions.scrollLength;\n\n\t\treturn {\n\t\t\tstartIndex: pageInfo.startIndex,\n\t\t\tendIndex: pageInfo.endIndex,\n\t\t\tstartIndexWithBuffer: pageInfo.startIndexWithBuffer,\n\t\t\tendIndexWithBuffer: pageInfo.endIndexWithBuffer,\n\t\t\tpadding: Math.round(newPadding),\n\t\t\tscrollLength: Math.round(newScrollLength)\n\t\t};\n\t}\n}\n","import { Component, OnInit, HostListener, OnDestroy, NgModule, SimpleChanges, OnChanges, ChangeDetectorRef, AfterViewChecked, ViewEncapsulation, ContentChild, ViewChild, forwardRef, Input, Output, EventEmitter, ElementRef, AfterViewInit, Pipe, PipeTransform } from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR, ControlValueAccessor, NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MyException } from './multiselect.model';\nimport { DropdownSettings } from './multiselect.interface';\nimport { ClickOutsideDirective, ScrollDirective, styleDirective, setPosition } from './clickOutside';\nimport { ListFilterPipe } from './list-filter';\nimport { Item, Badge, Search, TemplateRenderer, CIcon } from './menu-item';\nimport { DataService } from './multiselect.service';\nimport { Subscription } from 'rxjs';\nimport { VirtualScrollComponent, ChangeEvent } from './virtual-scroll';\n\nexport const DROPDOWN_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AngularMultiSelect),\n    multi: true\n};\nexport const DROPDOWN_CONTROL_VALIDATION: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => AngularMultiSelect),\n    multi: true,\n}\nconst noop = () => {\n};\n\n@Component({\n    selector: 'angular2-multiselect',\n    templateUrl: './multiselect.component.html',\n    host: { '[class]': 'defaultSettings.classes' },\n    styleUrls: ['./multiselect.component.scss'],\n    providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR, DROPDOWN_CONTROL_VALIDATION],\n    encapsulation: ViewEncapsulation.None,\n})\n\nexport class AngularMultiSelect implements OnInit, ControlValueAccessor, OnChanges, Validator, AfterViewChecked, OnDestroy {\n\n    @Input()\n    data: Array<any>;\n\n    @Input()\n    settings: DropdownSettings;\n\n    @Input()\n    loading: boolean;\n\n    @Output('onSelect')\n    onSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onDeSelect')\n    onDeSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onSelectAll')\n    onSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\n\n    @Output('onDeSelectAll')\n    onDeSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\n\n    @Output('onOpen')\n    onOpen: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onClose')\n    onClose: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onScrollToEnd')\n    onScrollToEnd: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onFilterSelectAll')\n    onFilterSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\n\n    @Output('onFilterDeSelectAll')\n    onFilterDeSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\n\n    @Output('onAddFilterNewItem')\n    onAddFilterNewItem: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onGroupSelect')\n    onGroupSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onGroupDeSelect')\n    onGroupDeSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @ContentChild(Item, {static: true}) itemTempl: Item;\n    @ContentChild(Badge, {static: true}) badgeTempl: Badge;\n    @ContentChild(Search, {static: true}) searchTempl: Search;\n\n\n    @ViewChild('searchInput', {static: true}) searchInput: ElementRef;\n    @ViewChild('selectedList', {static: true}) selectedListElem: ElementRef;\n    @ViewChild('dropdownList', {static: true}) dropdownListElem: ElementRef;\n\n    @HostListener('document:keyup.escape', ['$event'])\n    onEscapeDown(event: KeyboardEvent) {\n        if (this.settings.escapeToClose) {\n            this.closeDropdown();\n        }\n    }\n\n    filterPipe: ListFilterPipe;\n    public selectedItems: Array<any>;\n    public isActive: boolean = false;\n    public isSelectAll: boolean = false;\n    public isFilterSelectAll: boolean = false;\n    public isInfiniteFilterSelectAll: boolean = false;\n    public groupedData: Array<any>;\n    filter: any;\n    public chunkArray: any[];\n    public scrollTop: any;\n    public chunkIndex: any[] = [];\n    public cachedItems: any[] = [];\n    public groupCachedItems: any[] = [];\n    public totalRows: any;\n    public itemHeight: any = 41.6;\n    public screenItemsLen: any;\n    public cachedItemsLen: any;\n    public totalHeight: any;\n    public scroller: any;\n    public maxBuffer: any;\n    public lastScrolled: any;\n    public lastRepaintY: any;\n    public selectedListHeight: any;\n    public filterLength: any = 0;\n    public infiniteFilterLength: any = 0;\n    public viewPortItems: any;\n    public item: any;\n    public dropdownListYOffset: number = 0;\n    subscription: Subscription;\n    defaultSettings: DropdownSettings = {\n        singleSelection: false,\n        text: 'Select',\n        enableCheckAll: true,\n        selectAllText: 'Select All',\n        unSelectAllText: 'UnSelect All',\n        filterSelectAllText: 'Select all filtered results',\n        filterUnSelectAllText: 'UnSelect all filtered results',\n        enableSearchFilter: false,\n        searchBy: [],\n        maxHeight: 300,\n        badgeShowLimit: 999999999999,\n        classes: '',\n        disabled: false,\n        searchPlaceholderText: 'Search',\n        showCheckbox: true,\n        noDataLabel: 'No Data Available',\n        searchAutofocus: true,\n        lazyLoading: false,\n        labelKey: 'itemName',\n        primaryKey: 'id',\n        position: 'bottom',\n        autoPosition: true,\n        enableFilterSelectAll: true,\n        selectGroup: false,\n        addNewItemOnFilter: false,\n        addNewButtonText: \"Add\",\n        escapeToClose: true\n    }\n    public parseError: boolean;\n    public filteredList: any = [];\n    constructor(public _elementRef: ElementRef, private cdr: ChangeDetectorRef, private ds: DataService) {\n\n    }\n    ngOnInit() {\n        this.settings = Object.assign(this.defaultSettings, this.settings);\n\n        this.cachedItems = this.cloneArray(this.data);\n        if (this.settings.position == 'top') {\n            setTimeout(() => {\n                this.selectedListHeight = { val: 0 };\n                this.selectedListHeight.val = this.selectedListElem.nativeElement.clientHeight;\n            });\n        }\n        this.subscription = this.ds.getData().subscribe(data => {\n            if (data) {\n                var len = 0;\n                data.forEach((obj: any, i: any) => {\n                    if (!obj.hasOwnProperty('grpTitle')) {\n                        len++;\n                    }\n                });\n                this.filterLength = len;\n                this.onFilterChange(data);\n            }\n\n        });\n        setTimeout(() => {\n            this.calculateDropdownDirection();\n        });\n\n    }\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.data && !changes.data.firstChange) {\n            if (this.settings.groupBy) {\n                this.groupedData = this.transformData(this.data, this.settings.groupBy);\n                if (this.data.length == 0) {\n                    this.selectedItems = [];\n                }\n            }\n            this.cachedItems = this.cloneArray(this.data);\n        }\n        if (changes.settings && !changes.settings.firstChange) {\n            this.settings = Object.assign(this.defaultSettings, this.settings);\n        }\n        if (changes.loading) {\n            console.log(this.loading);\n        }\n    }\n    ngDoCheck() {\n        if (this.selectedItems) {\n            if (this.selectedItems.length == 0 || this.data.length == 0 || this.selectedItems.length < this.data.length) {\n                this.isSelectAll = false;\n            }\n        }\n    }\n    ngAfterViewInit() {\n        if (this.settings.lazyLoading) {\n            // this._elementRef.nativeElement.getElementsByClassName(\"lazyContainer\")[0].addEventListener('scroll', this.onScroll.bind(this));\n        }\n    }\n    ngAfterViewChecked() {\n        if (this.selectedListElem.nativeElement.clientHeight && this.settings.position == 'top' && this.selectedListHeight) {\n            this.selectedListHeight.val = this.selectedListElem.nativeElement.clientHeight;\n            this.cdr.detectChanges();\n        }\n    }\n    onItemClick(item: any, index: number, evt: Event) {\n        if (this.settings.disabled) {\n            return false;\n        }\n\n        let found = this.isSelected(item);\n        let limit = this.selectedItems.length < this.settings.limitSelection ? true : false;\n\n        if (!found) {\n            if (this.settings.limitSelection) {\n                if (limit) {\n                    this.addSelected(item);\n                    this.onSelect.emit(item);\n                }\n            }\n            else {\n                this.addSelected(item);\n                this.onSelect.emit(item);\n            }\n\n        }\n        else {\n            this.removeSelected(item);\n            this.onDeSelect.emit(item);\n        }\n        if (this.isSelectAll || this.data.length > this.selectedItems.length) {\n            this.isSelectAll = false;\n        }\n        if (this.data.length == this.selectedItems.length) {\n            this.isSelectAll = true;\n        }\n        if (this.settings.groupBy) {\n            this.updateGroupInfo(item);\n        }\n    }\n    public validate(c: FormControl): any {\n        return null;\n    }\n    private onTouchedCallback: (_: any) => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n\n    writeValue(value: any) {\n        if (value !== undefined && value !== null && value !== '') {\n            if (this.settings.singleSelection) {\n                try {\n\n                    if (value.length > 1) {\n                        this.selectedItems = [value[0]];\n                        throw new MyException(404, { \"msg\": \"Single Selection Mode, Selected Items cannot have more than one item.\" });\n                    }\n                    else {\n                        this.selectedItems = value;\n                    }\n                }\n                catch (e) {\n                    console.error(e.body.msg);\n                }\n\n            }\n            else {\n                if (this.settings.limitSelection) {\n                    this.selectedItems = value.slice(0, this.settings.limitSelection);\n                }\n                else {\n                    this.selectedItems = value;\n                }\n                if (this.selectedItems.length === this.data.length && this.data.length > 0) {\n                    this.isSelectAll = true;\n                }\n                if (this.settings.groupBy) {\n                    this.groupedData = this.transformData(this.data, this.settings.groupBy);\n                    this.groupCachedItems = this.cloneArray(this.groupedData);\n                }\n            }\n        } else {\n            this.selectedItems = [];\n        }\n    }\n\n    //From ControlValueAccessor interface\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    //From ControlValueAccessor interface\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n    trackByFn(index: number, item: any) {\n        return item[this.settings.primaryKey];\n    }\n    isSelected(clickedItem: any) {\n        let found = false;\n        this.selectedItems && this.selectedItems.forEach(item => {\n            if (clickedItem[this.settings.primaryKey] === item[this.settings.primaryKey]) {\n                found = true;\n            }\n        });\n        return found;\n    }\n    addSelected(item: any) {\n        if (this.settings.singleSelection) {\n            this.selectedItems = [];\n            this.selectedItems.push(item);\n            this.closeDropdown();\n        }\n        else\n            this.selectedItems.push(item);\n        this.onChangeCallback(this.selectedItems);\n        this.onTouchedCallback(this.selectedItems);\n    }\n    removeSelected(clickedItem: any) {\n        this.selectedItems && this.selectedItems.forEach(item => {\n            if (clickedItem[this.settings.primaryKey] === item[this.settings.primaryKey]) {\n                this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n            }\n        });\n        this.onChangeCallback(this.selectedItems);\n        this.onTouchedCallback(this.selectedItems);\n    }\n    toggleDropdown(evt: any) {\n        if (this.settings.disabled) {\n            return false;\n        }\n        this.isActive = !this.isActive;\n        if (this.isActive) {\n            if (this.settings.searchAutofocus && this.searchInput && this.settings.enableSearchFilter && !this.searchTempl) {\n                setTimeout(() => {\n                    this.searchInput.nativeElement.focus();\n                }, 0);\n            }\n            this.onOpen.emit(true);\n        }\n        else {\n            this.onClose.emit(false);\n        }\n        setTimeout(() => {\n            this.calculateDropdownDirection();\n        }, 0);\n\n        evt.preventDefault();\n    }\n    public openDropdown() {\n        if (this.settings.disabled) {\n            return false;\n        }\n        this.isActive = true;\n        if (this.settings.searchAutofocus && this.searchInput && this.settings.enableSearchFilter && !this.searchTempl) {\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n            }, 0);\n        }\n        this.onOpen.emit(true);\n    }\n    public closeDropdown() {\n        if (this.searchInput && this.settings.lazyLoading) {\n            this.searchInput.nativeElement.value = \"\";\n        }\n        if (this.searchInput) {\n            this.searchInput.nativeElement.value = \"\";\n        }\n        this.filter = \"\";\n        this.isActive = false;\n        this.onClose.emit(false);\n    }\n    public closeDropdownOnClickOut() {\n        if(this.isActive){\n            if (this.searchInput && this.settings.lazyLoading) {\n                this.searchInput.nativeElement.value = \"\";\n            }\n            if (this.searchInput) {\n                this.searchInput.nativeElement.value = \"\";\n            }\n            this.filter = \"\";\n            this.isActive = false;\n            this.onClose.emit(false);\n        }\n    }\n    toggleSelectAll() {\n        if (!this.isSelectAll) {\n            this.selectedItems = [];\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((obj) => {\n                    obj.selected = true;\n                })\n                this.groupCachedItems.forEach((obj) => {\n                    obj.selected = true;\n                })\n            }\n            this.selectedItems = this.data.slice();\n            this.isSelectAll = true;\n            this.onChangeCallback(this.selectedItems);\n            this.onTouchedCallback(this.selectedItems);\n\n            this.onSelectAll.emit(this.selectedItems);\n        }\n        else {\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((obj) => {\n                    obj.selected = false;\n                });\n                this.groupCachedItems.forEach((obj) => {\n                    obj.selected = false;\n                })\n            }\n            this.selectedItems = [];\n            this.isSelectAll = false;\n            this.onChangeCallback(this.selectedItems);\n            this.onTouchedCallback(this.selectedItems);\n\n            this.onDeSelectAll.emit(this.selectedItems);\n        }\n    }\n    filterGroupedList() {\n        if (this.filter == \"\" || this.filter == null) {\n            this.clearSearch();\n            return;\n        }\n        this.groupedData = this.cloneArray(this.groupCachedItems);\n        this.groupedData = this.groupedData.filter(obj => {\n            var arr = obj.list.filter(t => {\n                return t.itemName.toLowerCase().indexOf(this.filter.toLowerCase()) > -1;\n            });\n            obj.list = arr;\n            return arr.some(cat => {\n                return cat.itemName.toLowerCase().indexOf(this.filter.toLowerCase()) > -1;\n            }\n            )\n        });\n        console.log(this.groupedData);\n    }\n    toggleFilterSelectAll() {\n        if (!this.isFilterSelectAll) {\n            let added = [];\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((item: any) => {\n                    if (item.list) {\n                        item.list.forEach((el: any) => {\n                            if (!this.isSelected(el)) {\n                                this.addSelected(el);\n                                added.push(el);\n                            }\n                        });\n                    }\n                    this.updateGroupInfo(item);\n\n                });\n                \n            }\n            else {\n                this.ds.getFilteredData().forEach((item: any) => {\n                    if (!this.isSelected(item)) {\n                        this.addSelected(item);\n                        added.push(item);\n                    }\n\n                });\n            }\n\n            this.isFilterSelectAll = true;\n            this.onFilterSelectAll.emit(added);\n        }\n        else {\n            let removed = [];\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((item: any) => {\n                    if (item.list) {\n                        item.list.forEach((el: any) => {\n                            if (this.isSelected(el)) {\n                                this.removeSelected(el);\n                                removed.push(el);\n                            }\n                        });\n                    }\n                });\n            }\n            else {\n                this.ds.getFilteredData().forEach((item: any) => {\n                    if (this.isSelected(item)) {\n                        this.removeSelected(item);\n                        removed.push(item);\n                    }\n\n                });\n            }\n            this.isFilterSelectAll = false;\n            this.onFilterDeSelectAll.emit(removed);\n        }\n    }\n    toggleInfiniteFilterSelectAll() {\n        if (!this.isInfiniteFilterSelectAll) {\n            this.data.forEach((item: any) => {\n                if (!this.isSelected(item)) {\n                    this.addSelected(item);\n                }\n\n            });\n            this.isInfiniteFilterSelectAll = true;\n        }\n        else {\n            this.data.forEach((item: any) => {\n                if (this.isSelected(item)) {\n                    this.removeSelected(item);\n                }\n\n            });\n            this.isInfiniteFilterSelectAll = false;\n        }\n    }\n    clearSearch() {\n        if (this.settings.groupBy) {\n            this.groupedData = [];\n            this.groupedData = this.cloneArray(this.groupCachedItems);\n        }\n            this.filter = \"\";\n            this.isFilterSelectAll = false;\n\n    }\n    onFilterChange(data: any) {\n        if (this.filter && this.filter == \"\" || data.length == 0) {\n            this.isFilterSelectAll = false;\n        }\n        let cnt = 0;\n        data.forEach((item: any) => {\n\n            if (!item.hasOwnProperty('grpTitle') && this.isSelected(item)) {\n                cnt++;\n            }\n        });\n\n        if (cnt > 0 && this.filterLength == cnt) {\n            this.isFilterSelectAll = true;\n        }\n        else if (cnt > 0 && this.filterLength != cnt) {\n            this.isFilterSelectAll = false;\n        }\n        this.cdr.detectChanges();\n    }\n    cloneArray(arr: any) {\n        var i, copy;\n\n        if (Array.isArray(arr)) {\n            return JSON.parse(JSON.stringify(arr));\n        } else if (typeof arr === 'object') {\n            throw 'Cannot clone array containing an object!';\n        } else {\n            return arr;\n        }\n    }\n    updateGroupInfo(item: any) {\n        var key = this.settings.groupBy;\n        this.groupedData.forEach((obj: any) => {\n            var cnt = 0;\n            if (obj.grpTitle && (item[key] == obj[key])) {\n                if (obj.list) {\n                    obj.list.forEach((el: any) => {\n                        if (this.isSelected(el)) {\n                            cnt++;\n                        }\n                    });\n                }\n            }\n            if (obj.list && (cnt === obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = true;\n            }\n            else if (obj.list && (cnt != obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = false;\n            }\n        });\n        this.groupCachedItems.forEach((obj: any) => {\n            var cnt = 0;\n            if (obj.grpTitle && (item[key] == obj[key])) {\n                if (obj.list) {\n                    obj.list.forEach((el: any) => {\n                        if (this.isSelected(el)) {\n                            cnt++;\n                        }\n                    });\n                }\n            }\n            if (obj.list && (cnt === obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = true;\n            }\n            else if (obj.list && (cnt != obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = false;\n            }\n        });\n    }\n    transformData(arr: Array<any>, field: any): Array<any> {\n        const groupedObj: any = arr.reduce((prev: any, cur: any) => {\n            if (!prev[cur[field]]) {\n                prev[cur[field]] = [cur];\n            } else {\n                prev[cur[field]].push(cur);\n            }\n            return prev;\n        }, {});\n        const tempArr: any = [];\n        Object.keys(groupedObj).map((x: any) => {\n            var obj: any = {};\n            obj[\"grpTitle\"] = true;\n            obj[this.settings.labelKey] = x;\n            obj[this.settings.groupBy] = x;\n            obj['selected'] = false;\n            obj['list'] = [];\n            var cnt = 0;\n            groupedObj[x].forEach((item: any) => {\n                item['list'] = [];\n                obj.list.push(item);\n                if(this.isSelected(item)){\n                    cnt++;\n                }\n            });\n            if(cnt == obj.list.length){\n                obj.selected = true;\n            }\n            else {\n                obj.selected = false;\n            }\n            tempArr.push(obj);\n            // obj.list.forEach((item: any) => {\n            //     tempArr.push(item);\n            // });\n        });\n        return tempArr;\n    }\n    public filterInfiniteList(evt: any) {\n        var filteredElems: Array<any> = [];\n        if (this.settings.groupBy) {\n            this.groupedData = this.groupCachedItems.slice();\n        }\n        else {\n            this.data = this.cachedItems.slice();\n        }\n\n        if ((evt.target.value != null || evt.target.value != '') && !this.settings.groupBy) {\n            if (this.settings.searchBy.length > 0) {\n                for (var t = 0; t < this.settings.searchBy.length; t++) {\n\n                    this.data.filter((el: any) => {\n                        if (el[this.settings.searchBy[t].toString()].toString().toLowerCase().indexOf(evt.target.value.toString().toLowerCase()) >= 0) {\n                            filteredElems.push(el);\n                        }\n                    });\n                    /*                    if (filter && item[searchBy[t]] && item[searchBy[t]] != \"\") {\n                                            if (item[searchBy[t]].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n                                                found = true;\n                                            }\n                                        }*/\n                }\n\n            }\n            else {\n                this.data.filter(function (el: any) {\n                    for (var prop in el) {\n                        if (el[prop].toString().toLowerCase().indexOf(evt.target.value.toString().toLowerCase()) >= 0) {\n                            filteredElems.push(el);\n                            break;\n                        }\n                    }\n                });\n            }\n            this.data = [];\n            this.data = filteredElems;\n            this.infiniteFilterLength = this.data.length;\n        }\n        if (evt.target.value.toString() != '' && this.settings.groupBy) {\n            this.groupedData.filter(function (el: any) {\n                if (el.hasOwnProperty('grpTitle')) {\n                    filteredElems.push(el);\n                }\n                else {\n                    for (var prop in el) {\n                        if (el[prop].toString().toLowerCase().indexOf(evt.target.value.toString().toLowerCase()) >= 0) {\n                            filteredElems.push(el);\n                            break;\n                        }\n                    }\n                }\n            });\n            this.groupedData = [];\n            this.groupedData = filteredElems;\n            this.infiniteFilterLength = this.groupedData.length;\n        }\n        else if (evt.target.value.toString() == '' && this.cachedItems.length > 0) {\n            this.data = [];\n            this.data = this.cachedItems;\n            this.infiniteFilterLength = 0;\n        }\n    }\n    resetInfiniteSearch() {\n        this.filter = \"\";\n        this.isInfiniteFilterSelectAll = false;\n        this.data = [];\n        this.data = this.cachedItems;\n        this.groupedData = this.groupCachedItems;\n        this.infiniteFilterLength = 0;\n    }\n    onScrollEnd(e: ChangeEvent) {\n        this.onScrollToEnd.emit(e);\n    }\n    ngOnDestroy() {\n        if(this.subscription){\n            this.subscription.unsubscribe();\n        }\n        \n    }\n    selectGroup(item: any) {\n        if (item.selected) {\n            item.selected = false;\n            item.list.forEach((obj: any) => {\n                this.removeSelected(obj);\n            });\n            this.updateGroupInfo(item);\n            this.onGroupSelect.emit(item);\n        }\n        else {\n            item.selected = true;\n            item.list.forEach((obj: any) => {\n                if (!this.isSelected(obj)) {\n                    this.addSelected(obj);\n                }\n\n            });\n            this.updateGroupInfo(item);\n            this.onGroupDeSelect.emit(item);\n        }\n        \n        \n    }\n    addFilterNewItem() {\n        this.onAddFilterNewItem.emit(this.filter);\n        this.filterPipe = new ListFilterPipe(this.ds);\n        this.filterPipe.transform(this.data, this.filter, this.settings.searchBy);\n    }\n    calculateDropdownDirection() {\n        let shouldOpenTowardsTop = this.settings.position == 'top';\n        if (this.settings.autoPosition) {\n            const dropdownHeight = this.dropdownListElem.nativeElement.clientHeight;\n            const viewportHeight = document.documentElement.clientHeight;\n            const selectedListBounds = this.selectedListElem.nativeElement.getBoundingClientRect();\n\n            const spaceOnTop: number = selectedListBounds.top;\n            const spaceOnBottom: number = viewportHeight - selectedListBounds.top;\n            if (spaceOnBottom < spaceOnTop && dropdownHeight < spaceOnTop) {\n                this.openTowardsTop(true);\n            }\n            else {\n                this.openTowardsTop(false);\n            }\n            // Keep preference if there is not enough space on either the top or bottom\n            /* \t\t\tif (spaceOnTop || spaceOnBottom) {\n                            if (shouldOpenTowardsTop) {\n                                shouldOpenTowardsTop = spaceOnTop;\n                            } else {\n                                shouldOpenTowardsTop = !spaceOnBottom;\n                            }\n                        } */\n        }\n\n    }\n    openTowardsTop(value: boolean) {\n        if (value && this.selectedListElem.nativeElement.clientHeight) {\n            this.dropdownListYOffset = 15 + this.selectedListElem.nativeElement.clientHeight;\n        } else {\n            this.dropdownListYOffset = 0;\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, VirtualScrollComponent, CIcon],\n    exports: [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, VirtualScrollComponent, CIcon],\n    providers: [DataService]\n})\nexport class AngularMultiSelectModule { }\n"]}