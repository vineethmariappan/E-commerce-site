import { ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export interface ChangeEvent {
    start?: number;
    end?: number;
}
export interface WrapGroupDimensions {
    numberOfKnownWrapGroupChildSizes: number;
    sumOfKnownWrapGroupChildWidths: number;
    sumOfKnownWrapGroupChildHeights: number;
    maxChildSizePerWrapGroup: WrapGroupDimension[];
}
export interface WrapGroupDimension {
    childWidth: number;
    childHeight: number;
    items: any[];
}
export interface IDimensions {
    itemCount: number;
    itemsPerWrapGroup: number;
    wrapGroupsPerPage: number;
    itemsPerPage: number;
    pageCount_fractional: number;
    childWidth: number;
    childHeight: number;
    scrollLength: number;
}
export interface IPageInfo {
    startIndex: number;
    endIndex: number;
}
export interface IPageInfoWithBuffer extends IPageInfo {
    startIndexWithBuffer: number;
    endIndexWithBuffer: number;
}
export interface IViewport extends IPageInfoWithBuffer {
    padding: number;
    scrollLength: number;
}
export declare class VirtualScrollComponent implements OnInit, OnChanges, OnDestroy {
    protected readonly element: ElementRef;
    protected readonly renderer: Renderer2;
    protected readonly zone: NgZone;
    viewPortItems: any[];
    window: Window;
    readonly viewPortIndices: IPageInfo;
    protected _enableUnequalChildrenSizes: boolean;
    enableUnequalChildrenSizes: boolean;
    useMarginInsteadOfTranslate: boolean;
    scrollbarWidth: number;
    scrollbarHeight: number;
    childWidth: number;
    childHeight: number;
    protected _bufferAmount: number;
    bufferAmount: number;
    scrollAnimationTime: number;
    resizeBypassRefreshTheshold: number;
    protected _scrollThrottlingTime: number;
    scrollThrottlingTime: number;
    protected checkScrollElementResizedTimer: number;
    protected _checkResizeInterval: number;
    checkResizeInterval: number;
    protected _items: any[];
    items: any[];
    compareItems: (item1: any, item2: any) => boolean;
    protected _horizontal: boolean;
    horizontal: boolean;
    protected revertParentOverscroll(): void;
    protected oldParentScrollOverflow: {
        x: string;
        y: string;
    };
    protected _parentScroll: Element | Window;
    parentScroll: Element | Window;
    update: EventEmitter<any[]>;
    vsUpdate: EventEmitter<any[]>;
    change: EventEmitter<ChangeEvent>;
    vsChange: EventEmitter<ChangeEvent>;
    start: EventEmitter<ChangeEvent>;
    vsStart: EventEmitter<ChangeEvent>;
    end: EventEmitter<ChangeEvent>;
    vsEnd: EventEmitter<ChangeEvent>;
    contentElementRef: ElementRef;
    invisiblePaddingElementRef: ElementRef;
    containerElementRef: ElementRef;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: any): void;
    ngDoCheck(): void;
    refresh(): void;
    scrollInto(item: any, alignToBeginning?: boolean, additionalOffset?: number, animationMilliseconds?: number, animationCompletedCallback?: () => void): void;
    scrollToIndex(index: number, alignToBeginning?: boolean, additionalOffset?: number, animationMilliseconds?: number, animationCompletedCallback?: () => void): void;
    protected scrollToIndex_internal(index: number, alignToBeginning?: boolean, additionalOffset?: number, animationMilliseconds?: number, animationCompletedCallback?: () => void): void;
    constructor(element: ElementRef, renderer: Renderer2, zone: NgZone);
    protected previousScrollBoundingRect: ClientRect;
    protected checkScrollElementResized(): void;
    protected _invisiblePaddingProperty: any;
    protected _offsetType: any;
    protected _scrollType: any;
    protected _pageOffsetType: any;
    protected _childScrollDim: any;
    protected _translateDir: any;
    protected _marginDir: any;
    protected updateDirection(): void;
    protected refresh_throttled: () => void;
    protected throttleTrailing(func: Function, wait: number): Function;
    protected calculatedScrollbarWidth: number;
    protected calculatedScrollbarHeight: number;
    protected padding: number;
    protected previousViewPort: IViewport;
    protected cachedItemsLength: number;
    protected disposeScrollHandler: () => void | undefined;
    protected disposeResizeHandler: () => void | undefined;
    protected refresh_internal(itemsArrayModified: boolean, refreshCompletedCallback?: () => void, maxRunTimes?: number): void;
    protected getScrollElement(): any;
    protected addScrollEventHandlers(): void;
    protected removeScrollEventHandlers(): void;
    protected getElementsOffset(): number;
    protected countItemsPerWrapGroup(): any;
    protected getScrollPosition(): number;
    protected minMeasuredChildWidth: number;
    protected minMeasuredChildHeight: number;
    protected wrapGroupDimensions: any;
    protected resetWrapGroupDimensions(): void;
    protected calculateDimensions(): IDimensions;
    protected cachedPageSize: number;
    protected previousScrollNumberElements: number;
    protected calculatePadding(arrayStartIndexWithBuffer: number, dimensions: any, allowUnequalChildrenSizes_Experimental: boolean): number;
    protected calculatePageInfo(scrollPosition: number, dimensions: any): IPageInfoWithBuffer;
    protected calculateViewport(): IViewport;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<VirtualScrollComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<VirtualScrollComponent, "virtual-scroll,[virtualScroll]", ["virtualScroll"], {
    "useMarginInsteadOfTranslate": "useMarginInsteadOfTranslate";
    "scrollAnimationTime": "scrollAnimationTime";
    "resizeBypassRefreshTheshold": "resizeBypassRefreshTheshold";
    "compareItems": "compareItems";
    "horizontal": "horizontal";
    "scrollThrottlingTime": "scrollThrottlingTime";
    "enableUnequalChildrenSizes": "enableUnequalChildrenSizes";
    "bufferAmount": "bufferAmount";
    "checkResizeInterval": "checkResizeInterval";
    "items": "items";
    "parentScroll": "parentScroll";
    "scrollbarWidth": "scrollbarWidth";
    "scrollbarHeight": "scrollbarHeight";
    "childWidth": "childWidth";
    "childHeight": "childHeight";
}, {
    "update": "update";
    "vsUpdate": "vsUpdate";
    "change": "change";
    "vsChange": "vsChange";
    "start": "start";
    "vsStart": "vsStart";
    "end": "end";
    "vsEnd": "vsEnd";
}, ["containerElementRef"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlydHVhbC1zY3JvbGwuZC50cyIsInNvdXJjZXMiOlsidmlydHVhbC1zY3JvbGwuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnSUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE5nWm9uZSwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5leHBvcnQgaW50ZXJmYWNlIENoYW5nZUV2ZW50IHtcbiAgICBzdGFydD86IG51bWJlcjtcbiAgICBlbmQ/OiBudW1iZXI7XG59XG5leHBvcnQgaW50ZXJmYWNlIFdyYXBHcm91cERpbWVuc2lvbnMge1xuICAgIG51bWJlck9mS25vd25XcmFwR3JvdXBDaGlsZFNpemVzOiBudW1iZXI7XG4gICAgc3VtT2ZLbm93bldyYXBHcm91cENoaWxkV2lkdGhzOiBudW1iZXI7XG4gICAgc3VtT2ZLbm93bldyYXBHcm91cENoaWxkSGVpZ2h0czogbnVtYmVyO1xuICAgIG1heENoaWxkU2l6ZVBlcldyYXBHcm91cDogV3JhcEdyb3VwRGltZW5zaW9uW107XG59XG5leHBvcnQgaW50ZXJmYWNlIFdyYXBHcm91cERpbWVuc2lvbiB7XG4gICAgY2hpbGRXaWR0aDogbnVtYmVyO1xuICAgIGNoaWxkSGVpZ2h0OiBudW1iZXI7XG4gICAgaXRlbXM6IGFueVtdO1xufVxuZXhwb3J0IGludGVyZmFjZSBJRGltZW5zaW9ucyB7XG4gICAgaXRlbUNvdW50OiBudW1iZXI7XG4gICAgaXRlbXNQZXJXcmFwR3JvdXA6IG51bWJlcjtcbiAgICB3cmFwR3JvdXBzUGVyUGFnZTogbnVtYmVyO1xuICAgIGl0ZW1zUGVyUGFnZTogbnVtYmVyO1xuICAgIHBhZ2VDb3VudF9mcmFjdGlvbmFsOiBudW1iZXI7XG4gICAgY2hpbGRXaWR0aDogbnVtYmVyO1xuICAgIGNoaWxkSGVpZ2h0OiBudW1iZXI7XG4gICAgc2Nyb2xsTGVuZ3RoOiBudW1iZXI7XG59XG5leHBvcnQgaW50ZXJmYWNlIElQYWdlSW5mbyB7XG4gICAgc3RhcnRJbmRleDogbnVtYmVyO1xuICAgIGVuZEluZGV4OiBudW1iZXI7XG59XG5leHBvcnQgaW50ZXJmYWNlIElQYWdlSW5mb1dpdGhCdWZmZXIgZXh0ZW5kcyBJUGFnZUluZm8ge1xuICAgIHN0YXJ0SW5kZXhXaXRoQnVmZmVyOiBudW1iZXI7XG4gICAgZW5kSW5kZXhXaXRoQnVmZmVyOiBudW1iZXI7XG59XG5leHBvcnQgaW50ZXJmYWNlIElWaWV3cG9ydCBleHRlbmRzIElQYWdlSW5mb1dpdGhCdWZmZXIge1xuICAgIHBhZGRpbmc6IG51bWJlcjtcbiAgICBzY3JvbGxMZW5ndGg6IG51bWJlcjtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFZpcnR1YWxTY3JvbGxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgZWxlbWVudDogRWxlbWVudFJlZjtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgcmVuZGVyZXI6IFJlbmRlcmVyMjtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgem9uZTogTmdab25lO1xuICAgIHZpZXdQb3J0SXRlbXM6IGFueVtdO1xuICAgIHdpbmRvdzogV2luZG93O1xuICAgIHJlYWRvbmx5IHZpZXdQb3J0SW5kaWNlczogSVBhZ2VJbmZvO1xuICAgIHByb3RlY3RlZCBfZW5hYmxlVW5lcXVhbENoaWxkcmVuU2l6ZXM6IGJvb2xlYW47XG4gICAgZW5hYmxlVW5lcXVhbENoaWxkcmVuU2l6ZXM6IGJvb2xlYW47XG4gICAgdXNlTWFyZ2luSW5zdGVhZE9mVHJhbnNsYXRlOiBib29sZWFuO1xuICAgIHNjcm9sbGJhcldpZHRoOiBudW1iZXI7XG4gICAgc2Nyb2xsYmFySGVpZ2h0OiBudW1iZXI7XG4gICAgY2hpbGRXaWR0aDogbnVtYmVyO1xuICAgIGNoaWxkSGVpZ2h0OiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIF9idWZmZXJBbW91bnQ6IG51bWJlcjtcbiAgICBidWZmZXJBbW91bnQ6IG51bWJlcjtcbiAgICBzY3JvbGxBbmltYXRpb25UaW1lOiBudW1iZXI7XG4gICAgcmVzaXplQnlwYXNzUmVmcmVzaFRoZXNob2xkOiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIF9zY3JvbGxUaHJvdHRsaW5nVGltZTogbnVtYmVyO1xuICAgIHNjcm9sbFRocm90dGxpbmdUaW1lOiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIGNoZWNrU2Nyb2xsRWxlbWVudFJlc2l6ZWRUaW1lcjogbnVtYmVyO1xuICAgIHByb3RlY3RlZCBfY2hlY2tSZXNpemVJbnRlcnZhbDogbnVtYmVyO1xuICAgIGNoZWNrUmVzaXplSW50ZXJ2YWw6IG51bWJlcjtcbiAgICBwcm90ZWN0ZWQgX2l0ZW1zOiBhbnlbXTtcbiAgICBpdGVtczogYW55W107XG4gICAgY29tcGFyZUl0ZW1zOiAoaXRlbTE6IGFueSwgaXRlbTI6IGFueSkgPT4gYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgX2hvcml6b250YWw6IGJvb2xlYW47XG4gICAgaG9yaXpvbnRhbDogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgcmV2ZXJ0UGFyZW50T3ZlcnNjcm9sbCgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBvbGRQYXJlbnRTY3JvbGxPdmVyZmxvdzoge1xuICAgICAgICB4OiBzdHJpbmc7XG4gICAgICAgIHk6IHN0cmluZztcbiAgICB9O1xuICAgIHByb3RlY3RlZCBfcGFyZW50U2Nyb2xsOiBFbGVtZW50IHwgV2luZG93O1xuICAgIHBhcmVudFNjcm9sbDogRWxlbWVudCB8IFdpbmRvdztcbiAgICB1cGRhdGU6IEV2ZW50RW1pdHRlcjxhbnlbXT47XG4gICAgdnNVcGRhdGU6IEV2ZW50RW1pdHRlcjxhbnlbXT47XG4gICAgY2hhbmdlOiBFdmVudEVtaXR0ZXI8Q2hhbmdlRXZlbnQ+O1xuICAgIHZzQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Q2hhbmdlRXZlbnQ+O1xuICAgIHN0YXJ0OiBFdmVudEVtaXR0ZXI8Q2hhbmdlRXZlbnQ+O1xuICAgIHZzU3RhcnQ6IEV2ZW50RW1pdHRlcjxDaGFuZ2VFdmVudD47XG4gICAgZW5kOiBFdmVudEVtaXR0ZXI8Q2hhbmdlRXZlbnQ+O1xuICAgIHZzRW5kOiBFdmVudEVtaXR0ZXI8Q2hhbmdlRXZlbnQ+O1xuICAgIGNvbnRlbnRFbGVtZW50UmVmOiBFbGVtZW50UmVmO1xuICAgIGludmlzaWJsZVBhZGRpbmdFbGVtZW50UmVmOiBFbGVtZW50UmVmO1xuICAgIGNvbnRhaW5lckVsZW1lbnRSZWY6IEVsZW1lbnRSZWY7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IGFueSk6IHZvaWQ7XG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XG4gICAgcmVmcmVzaCgpOiB2b2lkO1xuICAgIHNjcm9sbEludG8oaXRlbTogYW55LCBhbGlnblRvQmVnaW5uaW5nPzogYm9vbGVhbiwgYWRkaXRpb25hbE9mZnNldD86IG51bWJlciwgYW5pbWF0aW9uTWlsbGlzZWNvbmRzPzogbnVtYmVyLCBhbmltYXRpb25Db21wbGV0ZWRDYWxsYmFjaz86ICgpID0+IHZvaWQpOiB2b2lkO1xuICAgIHNjcm9sbFRvSW5kZXgoaW5kZXg6IG51bWJlciwgYWxpZ25Ub0JlZ2lubmluZz86IGJvb2xlYW4sIGFkZGl0aW9uYWxPZmZzZXQ/OiBudW1iZXIsIGFuaW1hdGlvbk1pbGxpc2Vjb25kcz86IG51bWJlciwgYW5pbWF0aW9uQ29tcGxldGVkQ2FsbGJhY2s/OiAoKSA9PiB2b2lkKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgc2Nyb2xsVG9JbmRleF9pbnRlcm5hbChpbmRleDogbnVtYmVyLCBhbGlnblRvQmVnaW5uaW5nPzogYm9vbGVhbiwgYWRkaXRpb25hbE9mZnNldD86IG51bWJlciwgYW5pbWF0aW9uTWlsbGlzZWNvbmRzPzogbnVtYmVyLCBhbmltYXRpb25Db21wbGV0ZWRDYWxsYmFjaz86ICgpID0+IHZvaWQpOiB2b2lkO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIHpvbmU6IE5nWm9uZSk7XG4gICAgcHJvdGVjdGVkIHByZXZpb3VzU2Nyb2xsQm91bmRpbmdSZWN0OiBDbGllbnRSZWN0O1xuICAgIHByb3RlY3RlZCBjaGVja1Njcm9sbEVsZW1lbnRSZXNpemVkKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIF9pbnZpc2libGVQYWRkaW5nUHJvcGVydHk6IGFueTtcbiAgICBwcm90ZWN0ZWQgX29mZnNldFR5cGU6IGFueTtcbiAgICBwcm90ZWN0ZWQgX3Njcm9sbFR5cGU6IGFueTtcbiAgICBwcm90ZWN0ZWQgX3BhZ2VPZmZzZXRUeXBlOiBhbnk7XG4gICAgcHJvdGVjdGVkIF9jaGlsZFNjcm9sbERpbTogYW55O1xuICAgIHByb3RlY3RlZCBfdHJhbnNsYXRlRGlyOiBhbnk7XG4gICAgcHJvdGVjdGVkIF9tYXJnaW5EaXI6IGFueTtcbiAgICBwcm90ZWN0ZWQgdXBkYXRlRGlyZWN0aW9uKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHJlZnJlc2hfdGhyb3R0bGVkOiAoKSA9PiB2b2lkO1xuICAgIHByb3RlY3RlZCB0aHJvdHRsZVRyYWlsaW5nKGZ1bmM6IEZ1bmN0aW9uLCB3YWl0OiBudW1iZXIpOiBGdW5jdGlvbjtcbiAgICBwcm90ZWN0ZWQgY2FsY3VsYXRlZFNjcm9sbGJhcldpZHRoOiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIGNhbGN1bGF0ZWRTY3JvbGxiYXJIZWlnaHQ6IG51bWJlcjtcbiAgICBwcm90ZWN0ZWQgcGFkZGluZzogbnVtYmVyO1xuICAgIHByb3RlY3RlZCBwcmV2aW91c1ZpZXdQb3J0OiBJVmlld3BvcnQ7XG4gICAgcHJvdGVjdGVkIGNhY2hlZEl0ZW1zTGVuZ3RoOiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIGRpc3Bvc2VTY3JvbGxIYW5kbGVyOiAoKSA9PiB2b2lkIHwgdW5kZWZpbmVkO1xuICAgIHByb3RlY3RlZCBkaXNwb3NlUmVzaXplSGFuZGxlcjogKCkgPT4gdm9pZCB8IHVuZGVmaW5lZDtcbiAgICBwcm90ZWN0ZWQgcmVmcmVzaF9pbnRlcm5hbChpdGVtc0FycmF5TW9kaWZpZWQ6IGJvb2xlYW4sIHJlZnJlc2hDb21wbGV0ZWRDYWxsYmFjaz86ICgpID0+IHZvaWQsIG1heFJ1blRpbWVzPzogbnVtYmVyKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgZ2V0U2Nyb2xsRWxlbWVudCgpOiBhbnk7XG4gICAgcHJvdGVjdGVkIGFkZFNjcm9sbEV2ZW50SGFuZGxlcnMoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgcmVtb3ZlU2Nyb2xsRXZlbnRIYW5kbGVycygpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBnZXRFbGVtZW50c09mZnNldCgpOiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIGNvdW50SXRlbXNQZXJXcmFwR3JvdXAoKTogYW55O1xuICAgIHByb3RlY3RlZCBnZXRTY3JvbGxQb3NpdGlvbigpOiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIG1pbk1lYXN1cmVkQ2hpbGRXaWR0aDogbnVtYmVyO1xuICAgIHByb3RlY3RlZCBtaW5NZWFzdXJlZENoaWxkSGVpZ2h0OiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIHdyYXBHcm91cERpbWVuc2lvbnM6IGFueTtcbiAgICBwcm90ZWN0ZWQgcmVzZXRXcmFwR3JvdXBEaW1lbnNpb25zKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGNhbGN1bGF0ZURpbWVuc2lvbnMoKTogSURpbWVuc2lvbnM7XG4gICAgcHJvdGVjdGVkIGNhY2hlZFBhZ2VTaXplOiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIHByZXZpb3VzU2Nyb2xsTnVtYmVyRWxlbWVudHM6IG51bWJlcjtcbiAgICBwcm90ZWN0ZWQgY2FsY3VsYXRlUGFkZGluZyhhcnJheVN0YXJ0SW5kZXhXaXRoQnVmZmVyOiBudW1iZXIsIGRpbWVuc2lvbnM6IGFueSwgYWxsb3dVbmVxdWFsQ2hpbGRyZW5TaXplc19FeHBlcmltZW50YWw6IGJvb2xlYW4pOiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIGNhbGN1bGF0ZVBhZ2VJbmZvKHNjcm9sbFBvc2l0aW9uOiBudW1iZXIsIGRpbWVuc2lvbnM6IGFueSk6IElQYWdlSW5mb1dpdGhCdWZmZXI7XG4gICAgcHJvdGVjdGVkIGNhbGN1bGF0ZVZpZXdwb3J0KCk6IElWaWV3cG9ydDtcbn1cbiJdfQ==